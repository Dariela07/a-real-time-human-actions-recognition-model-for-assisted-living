2024/12/29 10:39:02 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 671729247
    GPU 0: Tesla V100-PCIE-16GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.1, V11.1.74
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 671729247
    diff_rank_seed: False
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/12/29 10:39:02 - mmengine - INFO - Config:
ann_file_test = 'data/normal_vs_3critical/normal_vs_3critical_test.txt'
ann_file_train = 'data/normal_vs_3critical/normal_vs_3critical_train.txt'
ann_file_val = 'data/normal_vs_3critical/normal_vs_3critical_val.txt'
data_root = 'data/normal_vs_3critical/train'
data_root_test = 'data/normal_vs_3critical/test'
data_root_val = 'data/normal_vs_3critical/val'
dataset_type = 'VideoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=3, max_keep_ckpts=3, save_best='auto', type='CheckpointHook'),
    logger=dict(ignore_last=False, interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    runtime_info=dict(type='RuntimeInfoHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    sync_buffers=dict(type='SyncBuffersHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw_confusion_matrix=True, type='VisualizationHook'))
default_scope = 'mmaction'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
file_client_args = dict(io_backend='disk')
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=20)
model = dict(
    backbone=dict(
        channel_ratio=8,
        fast_pathway=dict(
            base_channels=8,
            conv1_kernel=(
                5,
                7,
                7,
            ),
            conv1_stride_t=1,
            depth=101,
            lateral=False,
            norm_eval=False,
            pool1_stride_t=1,
            pretrained=None,
            type='resnet3d'),
        pretrained=None,
        resample_rate=4,
        slow_pathway=dict(
            conv1_kernel=(
                1,
                7,
                7,
            ),
            conv1_stride_t=1,
            depth=101,
            dilations=(
                1,
                1,
                1,
                1,
            ),
            fusion_kernel=7,
            inflate=(
                0,
                0,
                1,
                1,
            ),
            lateral=True,
            norm_eval=False,
            pool1_stride_t=1,
            pretrained=None,
            type='resnet3d'),
        speed_ratio=4,
        type='ResNet3dSlowFast'),
    cls_head=dict(
        average_clips='prob',
        dropout_ratio=0.5,
        in_channels=2304,
        loss_cls=dict(
            class_weight=[
                1.0,
                1.0,
                1.0,
                0.3,
            ],
            loss_weight=1.0,
            type='CrossEntropyLoss'),
        num_classes=4,
        spatial_type='avg',
        type='SlowFastHead'),
    data_preprocessor=dict(
        format_shape='NCTHW',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='ActionDataPreprocessor'),
    type='Recognizer3D')
optim_wrapper = dict(
    clip_grad=dict(max_norm=40, norm_type=2),
    optimizer=dict(lr=0.0015, momentum=0.9, type='SGD', weight_decay=0.0001))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=True,
        convert_to_iter_based=True,
        end=5,
        start_factor=0.1,
        type='LinearLR'),
    dict(
        T_max=60,
        begin=6,
        by_epoch=True,
        end=60,
        eta_min=0,
        type='CosineAnnealingLR'),
]
randomness = dict(deterministic=False, diff_rank_seed=False, seed=None)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='data/normal_vs_3critical/normal_vs_3critical_test.txt',
        data_prefix=dict(video='data/normal_vs_3critical/test'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=10,
                test_mode=True,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=256, type='ThreeCrop'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(metrics=[
    dict(type='AccMetric'),
    dict(num_classes=4, type='ConfusionMatrix'),
])
test_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(
        clip_len=32,
        frame_interval=2,
        num_clips=10,
        test_mode=True,
        type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=256, type='ThreeCrop'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
train_cfg = dict(
    max_epochs=50, type='EpochBasedTrainLoop', val_begin=1, val_interval=2)
train_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='data/normal_vs_3critical/normal_vs_3critical_train.txt',
        data_prefix=dict(video='data/normal_vs_3critical/train'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=1,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(type='RandomResizedCrop'),
            dict(keep_ratio=False, scale=(
                224,
                224,
            ), type='Resize'),
            dict(flip_ratio=0.5, type='Flip'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(clip_len=32, frame_interval=2, num_clips=1, type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(type='RandomResizedCrop'),
    dict(keep_ratio=False, scale=(
        224,
        224,
    ), type='Resize'),
    dict(flip_ratio=0.5, type='Flip'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='data/normal_vs_3critical/normal_vs_3critical_val.txt',
        data_prefix=dict(video='data/normal_vs_3critical/val'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=1,
                test_mode=True,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=224, type='CenterCrop'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(metrics=[
    dict(type='AccMetric'),
    dict(num_classes=4, type='ConfusionMatrix'),
])
val_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(
        clip_len=32,
        frame_interval=2,
        num_clips=1,
        test_mode=True,
        type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=224, type='CenterCrop'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='ActionVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer'

2024/12/29 10:39:08 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/12/29 10:39:08 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
Name of parameter - Initialization information

backbone.slow_path.conv1.conv.weight - torch.Size([64, 3, 1, 7, 7]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv1.conv.weight - torch.Size([64, 80, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.downsample.conv.weight - torch.Size([256, 80, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.downsample.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.downsample.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv1.conv.weight - torch.Size([64, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv1.conv.weight - torch.Size([64, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv1.conv.weight - torch.Size([128, 320, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.downsample.conv.weight - torch.Size([512, 320, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.downsample.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.downsample.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv1.conv.weight - torch.Size([128, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv1.conv.weight - torch.Size([128, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv1.conv.weight - torch.Size([128, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv1.conv.weight - torch.Size([256, 640, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.downsample.conv.weight - torch.Size([1024, 640, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.downsample.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.downsample.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.6.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.6.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.6.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.6.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.6.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.6.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.6.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.6.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.6.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.7.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.7.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.7.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.7.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.7.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.7.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.7.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.7.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.7.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.8.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.8.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.8.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.8.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.8.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.8.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.8.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.8.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.8.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.9.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.9.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.9.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.9.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.9.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.9.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.9.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.9.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.9.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.10.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.10.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.10.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.10.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.10.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.10.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.10.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.10.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.10.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.11.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.11.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.11.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.11.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.11.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.11.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.11.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.11.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.11.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.12.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.12.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.12.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.12.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.12.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.12.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.12.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.12.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.12.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.13.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.13.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.13.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.13.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.13.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.13.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.13.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.13.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.13.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.14.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.14.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.14.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.14.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.14.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.14.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.14.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.14.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.14.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.15.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.15.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.15.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.15.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.15.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.15.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.15.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.15.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.15.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.16.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.16.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.16.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.16.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.16.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.16.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.16.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.16.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.16.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.17.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.17.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.17.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.17.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.17.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.17.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.17.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.17.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.17.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.18.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.18.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.18.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.18.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.18.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.18.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.18.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.18.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.18.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.19.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.19.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.19.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.19.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.19.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.19.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.19.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.19.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.19.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.20.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.20.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.20.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.20.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.20.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.20.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.20.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.20.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.20.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.21.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.21.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.21.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.21.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.21.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.21.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.21.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.21.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.21.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.22.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.22.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.22.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.22.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.22.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.22.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.22.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.22.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.22.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv1.conv.weight - torch.Size([512, 1280, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv2.conv.weight - torch.Size([512, 512, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv3.conv.weight - torch.Size([2048, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv3.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.downsample.conv.weight - torch.Size([2048, 1280, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.downsample.bn.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.downsample.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv1.conv.weight - torch.Size([512, 2048, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv2.conv.weight - torch.Size([512, 512, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv3.conv.weight - torch.Size([2048, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv3.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv1.conv.weight - torch.Size([512, 2048, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv2.conv.weight - torch.Size([512, 512, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv3.conv.weight - torch.Size([2048, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv3.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.conv1_lateral.conv.weight - torch.Size([16, 8, 7, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1_lateral.conv.weight - torch.Size([64, 32, 7, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2_lateral.conv.weight - torch.Size([128, 64, 7, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3_lateral.conv.weight - torch.Size([256, 128, 7, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.conv1.conv.weight - torch.Size([8, 3, 5, 7, 7]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv1.conv.weight - torch.Size([8, 8, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv2.conv.weight - torch.Size([8, 8, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv2.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv2.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv3.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv3.bn.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv3.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.downsample.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.downsample.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.downsample.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv1.conv.weight - torch.Size([8, 32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv2.conv.weight - torch.Size([8, 8, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv2.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv2.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv3.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv3.bn.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv3.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv1.conv.weight - torch.Size([8, 32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv2.conv.weight - torch.Size([8, 8, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv2.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv2.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv3.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv3.bn.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv3.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv1.conv.weight - torch.Size([16, 32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.downsample.conv.weight - torch.Size([64, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.downsample.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.downsample.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv1.conv.weight - torch.Size([16, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv1.conv.weight - torch.Size([16, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv1.conv.weight - torch.Size([16, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv1.conv.weight - torch.Size([32, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.downsample.conv.weight - torch.Size([128, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.downsample.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.downsample.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.6.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.6.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.6.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.6.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.6.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.6.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.6.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.6.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.6.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.7.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.7.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.7.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.7.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.7.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.7.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.7.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.7.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.7.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.8.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.8.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.8.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.8.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.8.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.8.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.8.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.8.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.8.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.9.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.9.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.9.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.9.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.9.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.9.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.9.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.9.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.9.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.10.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.10.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.10.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.10.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.10.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.10.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.10.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.10.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.10.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.11.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.11.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.11.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.11.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.11.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.11.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.11.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.11.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.11.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.12.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.12.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.12.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.12.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.12.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.12.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.12.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.12.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.12.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.13.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.13.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.13.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.13.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.13.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.13.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.13.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.13.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.13.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.14.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.14.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.14.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.14.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.14.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.14.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.14.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.14.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.14.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.15.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.15.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.15.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.15.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.15.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.15.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.15.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.15.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.15.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.16.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.16.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.16.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.16.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.16.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.16.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.16.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.16.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.16.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.17.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.17.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.17.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.17.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.17.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.17.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.17.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.17.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.17.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.18.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.18.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.18.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.18.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.18.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.18.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.18.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.18.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.18.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.19.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.19.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.19.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.19.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.19.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.19.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.19.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.19.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.19.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.20.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.20.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.20.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.20.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.20.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.20.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.20.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.20.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.20.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.21.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.21.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.21.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.21.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.21.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.21.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.21.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.21.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.21.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.22.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.22.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.22.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.22.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.22.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.22.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.22.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.22.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.22.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv1.conv.weight - torch.Size([64, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.downsample.conv.weight - torch.Size([256, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.downsample.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.downsample.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv1.conv.weight - torch.Size([64, 256, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv1.conv.weight - torch.Size([64, 256, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

cls_head.fc_cls.weight - torch.Size([4, 2304]): 
Initialized by user-defined `init_weights` in SlowFastHead  

cls_head.fc_cls.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in SlowFastHead  
2024/12/29 10:39:08 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/12/29 10:39:08 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/12/29 10:39:08 - mmengine - INFO - Checkpoints will be saved to /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer.
2024/12/29 10:41:59 - mmengine - INFO - Epoch(train)  [1][100/567]  lr: 1.9716e-04  eta: 13:25:38  time: 1.6180  data_time: 0.0074  memory: 13074  grad_norm: 9.6545  loss: 1.3870  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.3870
2024/12/29 10:44:41 - mmengine - INFO - Epoch(train)  [1][200/567]  lr: 2.4480e-04  eta: 13:02:02  time: 1.6328  data_time: 0.0068  memory: 13074  grad_norm: 10.1009  loss: 1.4090  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4090
2024/12/29 10:47:25 - mmengine - INFO - Epoch(train)  [1][300/567]  lr: 2.9243e-04  eta: 12:55:02  time: 1.6423  data_time: 0.0069  memory: 13074  grad_norm: 9.7894  loss: 1.3792  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.3792
2024/12/29 10:50:10 - mmengine - INFO - Epoch(train)  [1][400/567]  lr: 3.4007e-04  eta: 12:50:25  time: 1.6213  data_time: 0.0075  memory: 13074  grad_norm: 9.8063  loss: 1.4346  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.4346
2024/12/29 10:52:52 - mmengine - INFO - Epoch(train)  [1][500/567]  lr: 3.8770e-04  eta: 12:44:49  time: 1.6259  data_time: 0.0076  memory: 13074  grad_norm: 10.2413  loss: 1.5089  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.5089
2024/12/29 10:54:41 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 10:54:41 - mmengine - INFO - Epoch(train)  [1][567/567]  lr: 4.1962e-04  eta: 12:41:48  time: 1.6273  data_time: 0.0069  memory: 13074  grad_norm: 9.6253  loss: 1.4026  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.4026
2024/12/29 10:57:28 - mmengine - INFO - Epoch(train)  [2][100/567]  lr: 4.6725e-04  eta: 12:40:56  time: 1.6263  data_time: 0.0067  memory: 13074  grad_norm: 10.4094  loss: 1.4372  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4372
2024/12/29 11:00:11 - mmengine - INFO - Epoch(train)  [2][200/567]  lr: 5.1489e-04  eta: 12:36:57  time: 1.6315  data_time: 0.0069  memory: 13074  grad_norm: 10.8733  loss: 1.5369  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.5369
2024/12/29 11:02:54 - mmengine - INFO - Epoch(train)  [2][300/567]  lr: 5.6253e-04  eta: 12:33:23  time: 1.6317  data_time: 0.0071  memory: 13074  grad_norm: 10.0317  loss: 1.4591  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4591
2024/12/29 11:05:37 - mmengine - INFO - Epoch(train)  [2][400/567]  lr: 6.1016e-04  eta: 12:30:01  time: 1.6327  data_time: 0.0070  memory: 13074  grad_norm: 10.6973  loss: 1.4861  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4861
2024/12/29 11:06:31 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 11:08:21 - mmengine - INFO - Epoch(train)  [2][500/567]  lr: 6.5780e-04  eta: 12:26:52  time: 1.6365  data_time: 0.0068  memory: 13074  grad_norm: 11.1353  loss: 1.4755  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.4755
2024/12/29 11:10:10 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 11:10:10 - mmengine - INFO - Epoch(train)  [2][567/567]  lr: 6.8971e-04  eta: 12:24:47  time: 1.6331  data_time: 0.0069  memory: 13074  grad_norm: 11.3895  loss: 1.4864  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.4864
2024/12/29 11:11:07 - mmengine - INFO - Epoch(val) [2][95/95]    acc/top1: 0.5305  acc/top5: 1.0000  acc/mean1: 0.2500  confusion_matrix/result: 
tensor([[  0,   0,   0, 118],
        [  0,   0,   0, 118],
        [  0,   0,   0, 118],
        [  0,   0,   0, 400]])
  data_time: 0.1095  time: 0.5954
2024/12/29 11:11:07 - mmengine - INFO - The best checkpoint with 0.5305 acc/top1 at 2 epoch is saved to best_acc_top1_epoch_2.pth.
2024/12/29 11:13:55 - mmengine - INFO - Epoch(train)  [3][100/567]  lr: 7.3735e-04  eta: 12:23:24  time: 1.6313  data_time: 0.0068  memory: 13074  grad_norm: 11.2585  loss: 1.5136  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.5136
2024/12/29 11:16:39 - mmengine - INFO - Epoch(train)  [3][200/567]  lr: 7.8499e-04  eta: 12:20:18  time: 1.6376  data_time: 0.0068  memory: 13074  grad_norm: 11.2896  loss: 1.4814  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4814
2024/12/29 11:19:22 - mmengine - INFO - Epoch(train)  [3][300/567]  lr: 8.3262e-04  eta: 12:17:17  time: 1.6340  data_time: 0.0067  memory: 13074  grad_norm: 10.9480  loss: 1.4967  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4967
2024/12/29 11:22:06 - mmengine - INFO - Epoch(train)  [3][400/567]  lr: 8.8026e-04  eta: 12:14:20  time: 1.6357  data_time: 0.0076  memory: 13074  grad_norm: 11.0386  loss: 1.4355  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4355
2024/12/29 11:24:50 - mmengine - INFO - Epoch(train)  [3][500/567]  lr: 9.2789e-04  eta: 12:11:27  time: 1.6393  data_time: 0.0071  memory: 13074  grad_norm: 10.9045  loss: 1.4827  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4827
2024/12/29 11:26:39 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 11:26:39 - mmengine - INFO - Epoch(train)  [3][567/567]  lr: 9.5981e-04  eta: 12:09:32  time: 1.6345  data_time: 0.0069  memory: 13074  grad_norm: 9.4763  loss: 1.3565  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.3565
2024/12/29 11:26:39 - mmengine - INFO - Saving checkpoint at 3 epochs
2024/12/29 11:29:29 - mmengine - INFO - Epoch(train)  [4][100/567]  lr: 1.0074e-03  eta: 12:07:52  time: 1.6400  data_time: 0.0068  memory: 13074  grad_norm: 10.6611  loss: 1.4411  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.4411
2024/12/29 11:32:13 - mmengine - INFO - Epoch(train)  [4][200/567]  lr: 1.0551e-03  eta: 12:04:58  time: 1.6372  data_time: 0.0069  memory: 13074  grad_norm: 10.1706  loss: 1.4197  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.4197
2024/12/29 11:34:55 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 11:34:57 - mmengine - INFO - Epoch(train)  [4][300/567]  lr: 1.1027e-03  eta: 12:02:05  time: 1.6394  data_time: 0.0071  memory: 13074  grad_norm: 11.5437  loss: 1.5503  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.5503
2024/12/29 11:37:41 - mmengine - INFO - Epoch(train)  [4][400/567]  lr: 1.1504e-03  eta: 11:59:14  time: 1.6399  data_time: 0.0071  memory: 13074  grad_norm: 11.0507  loss: 1.4964  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.4964
2024/12/29 11:40:25 - mmengine - INFO - Epoch(train)  [4][500/567]  lr: 1.1980e-03  eta: 11:56:25  time: 1.6410  data_time: 0.0071  memory: 13074  grad_norm: 10.8596  loss: 1.4693  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.4693
2024/12/29 11:42:14 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 11:42:14 - mmengine - INFO - Epoch(train)  [4][567/567]  lr: 1.2299e-03  eta: 11:54:31  time: 1.6397  data_time: 0.0072  memory: 13074  grad_norm: 10.7215  loss: 1.6031  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.6031
2024/12/29 11:43:11 - mmengine - INFO - Epoch(val) [4][95/95]    acc/top1: 0.4483  acc/top5: 1.0000  acc/mean1: 0.4413  confusion_matrix/result: 
tensor([[ 89,  27,   1,   1],
        [ 65,  50,   1,   2],
        [ 39,   5,  15,  59],
        [129,  14,  73, 184]])
  data_time: 0.1097  time: 0.5950
2024/12/29 11:45:59 - mmengine - INFO - Epoch(train)  [5][100/567]  lr: 1.2775e-03  eta: 11:52:25  time: 1.6352  data_time: 0.0071  memory: 13074  grad_norm: 10.6520  loss: 1.5377  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.5377
2024/12/29 11:48:43 - mmengine - INFO - Epoch(train)  [5][200/567]  lr: 1.3252e-03  eta: 11:49:33  time: 1.6410  data_time: 0.0072  memory: 13074  grad_norm: 10.6980  loss: 1.5032  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.5032
2024/12/29 11:51:27 - mmengine - INFO - Epoch(train)  [5][300/567]  lr: 1.3728e-03  eta: 11:46:45  time: 1.6394  data_time: 0.0070  memory: 13074  grad_norm: 10.7720  loss: 1.6453  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.6453
2024/12/29 11:54:11 - mmengine - INFO - Epoch(train)  [5][400/567]  lr: 1.4204e-03  eta: 11:43:56  time: 1.6410  data_time: 0.0073  memory: 13074  grad_norm: 10.1398  loss: 1.4483  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4483
2024/12/29 11:56:55 - mmengine - INFO - Epoch(train)  [5][500/567]  lr: 1.4681e-03  eta: 11:41:06  time: 1.6400  data_time: 0.0074  memory: 13074  grad_norm: 10.5708  loss: 1.6562  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.6562
2024/12/29 11:58:45 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 11:58:45 - mmengine - INFO - Epoch(train)  [5][567/567]  lr: 1.5000e-03  eta: 11:39:12  time: 1.6349  data_time: 0.0070  memory: 13074  grad_norm: 8.8427  loss: 1.4190  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4190
2024/12/29 12:01:34 - mmengine - INFO - Epoch(train)  [6][100/567]  lr: 1.5000e-03  eta: 11:37:04  time: 1.6364  data_time: 0.0067  memory: 13074  grad_norm: 9.6977  loss: 1.5634  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.5634
2024/12/29 12:03:20 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 12:04:17 - mmengine - INFO - Epoch(train)  [6][200/567]  lr: 1.5000e-03  eta: 11:34:14  time: 1.6375  data_time: 0.0069  memory: 13074  grad_norm: 8.9375  loss: 1.4614  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.4614
2024/12/29 12:07:01 - mmengine - INFO - Epoch(train)  [6][300/567]  lr: 1.5000e-03  eta: 11:31:24  time: 1.6405  data_time: 0.0068  memory: 13074  grad_norm: 7.7043  loss: 1.3177  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.3177
2024/12/29 12:09:45 - mmengine - INFO - Epoch(train)  [6][400/567]  lr: 1.5000e-03  eta: 11:28:35  time: 1.6410  data_time: 0.0087  memory: 13074  grad_norm: 7.5100  loss: 1.4123  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4123
2024/12/29 12:12:29 - mmengine - INFO - Epoch(train)  [6][500/567]  lr: 1.5000e-03  eta: 11:25:45  time: 1.6373  data_time: 0.0072  memory: 13074  grad_norm: 8.4286  loss: 1.3811  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.3811
2024/12/29 12:14:19 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 12:14:19 - mmengine - INFO - Epoch(train)  [6][567/567]  lr: 1.5000e-03  eta: 11:23:52  time: 1.6358  data_time: 0.0069  memory: 13074  grad_norm: 7.3205  loss: 1.2548  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.2548
2024/12/29 12:14:19 - mmengine - INFO - Saving checkpoint at 6 epochs
2024/12/29 12:15:17 - mmengine - INFO - Epoch(val) [6][95/95]    acc/top1: 0.5411  acc/top5: 1.0000  acc/mean1: 0.4238  confusion_matrix/result: 
tensor([[  0, 108,   0,  10],
        [  0, 111,   0,   7],
        [  0,  19,   2,  97],
        [  0,  89,  16, 295]])
  data_time: 0.1138  time: 0.5974
2024/12/29 12:15:17 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_2.pth is removed
2024/12/29 12:15:18 - mmengine - INFO - The best checkpoint with 0.5411 acc/top1 at 6 epoch is saved to best_acc_top1_epoch_6.pth.
2024/12/29 12:18:07 - mmengine - INFO - Epoch(train)  [7][100/567]  lr: 1.5000e-03  eta: 11:21:31  time: 1.6340  data_time: 0.0068  memory: 13074  grad_norm: 7.7013  loss: 1.4297  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.4297
2024/12/29 12:20:51 - mmengine - INFO - Epoch(train)  [7][200/567]  lr: 1.5000e-03  eta: 11:18:41  time: 1.6373  data_time: 0.0068  memory: 13074  grad_norm: 7.6465  loss: 1.3111  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.3111
2024/12/29 12:23:35 - mmengine - INFO - Epoch(train)  [7][300/567]  lr: 1.5000e-03  eta: 11:15:51  time: 1.6399  data_time: 0.0070  memory: 13074  grad_norm: 6.6163  loss: 1.3370  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.3370
2024/12/29 12:26:19 - mmengine - INFO - Epoch(train)  [7][400/567]  lr: 1.5000e-03  eta: 11:13:02  time: 1.6397  data_time: 0.0070  memory: 13074  grad_norm: 7.5888  loss: 1.4557  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.4557
2024/12/29 12:29:02 - mmengine - INFO - Epoch(train)  [7][500/567]  lr: 1.5000e-03  eta: 11:10:13  time: 1.6350  data_time: 0.0070  memory: 13074  grad_norm: 7.3058  loss: 1.4028  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.4028
2024/12/29 12:30:52 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 12:30:52 - mmengine - INFO - Epoch(train)  [7][567/567]  lr: 1.5000e-03  eta: 11:08:20  time: 1.6399  data_time: 0.0069  memory: 13074  grad_norm: 6.6405  loss: 1.3413  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.3413
2024/12/29 12:31:48 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 12:33:41 - mmengine - INFO - Epoch(train)  [8][100/567]  lr: 1.4990e-03  eta: 11:05:59  time: 1.6386  data_time: 0.0071  memory: 13074  grad_norm: 7.3486  loss: 1.3616  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.3616
2024/12/29 12:36:25 - mmengine - INFO - Epoch(train)  [8][200/567]  lr: 1.4990e-03  eta: 11:03:10  time: 1.6371  data_time: 0.0070  memory: 13074  grad_norm: 5.9264  loss: 1.3298  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.3298
2024/12/29 12:39:08 - mmengine - INFO - Epoch(train)  [8][300/567]  lr: 1.4990e-03  eta: 11:00:22  time: 1.6401  data_time: 0.0068  memory: 13074  grad_norm: 6.5678  loss: 1.4601  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4601
2024/12/29 12:41:52 - mmengine - INFO - Epoch(train)  [8][400/567]  lr: 1.4990e-03  eta: 10:57:33  time: 1.6384  data_time: 0.0070  memory: 13074  grad_norm: 7.2627  loss: 1.4079  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.4079
2024/12/29 12:44:36 - mmengine - INFO - Epoch(train)  [8][500/567]  lr: 1.4990e-03  eta: 10:54:45  time: 1.6388  data_time: 0.0070  memory: 13074  grad_norm: 6.6090  loss: 1.2572  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.2572
2024/12/29 12:46:26 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 12:46:26 - mmengine - INFO - Epoch(train)  [8][567/567]  lr: 1.4990e-03  eta: 10:52:52  time: 1.6380  data_time: 0.0071  memory: 13074  grad_norm: 6.0491  loss: 1.2489  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.2489
2024/12/29 12:47:23 - mmengine - INFO - Epoch(val) [8][95/95]    acc/top1: 0.3475  acc/top5: 1.0000  acc/mean1: 0.5401  confusion_matrix/result: 
tensor([[ 41,  69,   6,   2],
        [  5, 104,   9,   0],
        [  2,   7, 107,   2],
        [ 21,  47, 322,  10]])
  data_time: 0.1106  time: 0.5934
2024/12/29 12:50:11 - mmengine - INFO - Epoch(train)  [9][100/567]  lr: 1.4959e-03  eta: 10:50:28  time: 1.6347  data_time: 0.0068  memory: 13074  grad_norm: 5.7651  loss: 1.3603  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.3603
2024/12/29 12:52:55 - mmengine - INFO - Epoch(train)  [9][200/567]  lr: 1.4959e-03  eta: 10:47:38  time: 1.6388  data_time: 0.0069  memory: 13074  grad_norm: 5.7116  loss: 1.2781  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.2781
2024/12/29 12:55:39 - mmengine - INFO - Epoch(train)  [9][300/567]  lr: 1.4959e-03  eta: 10:44:50  time: 1.6373  data_time: 0.0070  memory: 13074  grad_norm: 5.6748  loss: 1.4011  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.4011
2024/12/29 12:58:22 - mmengine - INFO - Epoch(train)  [9][400/567]  lr: 1.4959e-03  eta: 10:42:03  time: 1.6378  data_time: 0.0071  memory: 13074  grad_norm: 5.9477  loss: 1.2989  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.2989
2024/12/29 13:00:07 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:01:06 - mmengine - INFO - Epoch(train)  [9][500/567]  lr: 1.4959e-03  eta: 10:39:16  time: 1.6437  data_time: 0.0072  memory: 13074  grad_norm: 6.4066  loss: 1.3186  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.3186
2024/12/29 13:02:56 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:02:56 - mmengine - INFO - Epoch(train)  [9][567/567]  lr: 1.4959e-03  eta: 10:37:24  time: 1.6398  data_time: 0.0070  memory: 13074  grad_norm: 5.3198  loss: 1.1983  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1983
2024/12/29 13:02:56 - mmengine - INFO - Saving checkpoint at 9 epochs
2024/12/29 13:05:45 - mmengine - INFO - Epoch(train) [10][100/567]  lr: 1.4908e-03  eta: 10:34:56  time: 1.6408  data_time: 0.0068  memory: 13074  grad_norm: 5.3898  loss: 1.1662  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.1662
2024/12/29 13:08:29 - mmengine - INFO - Epoch(train) [10][200/567]  lr: 1.4908e-03  eta: 10:32:09  time: 1.6426  data_time: 0.0070  memory: 13074  grad_norm: 5.7184  loss: 1.3044  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.3044
2024/12/29 13:11:13 - mmengine - INFO - Epoch(train) [10][300/567]  lr: 1.4908e-03  eta: 10:29:22  time: 1.6389  data_time: 0.0068  memory: 13074  grad_norm: 6.5048  loss: 1.4069  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.4069
2024/12/29 13:13:57 - mmengine - INFO - Epoch(train) [10][400/567]  lr: 1.4908e-03  eta: 10:26:35  time: 1.6382  data_time: 0.0071  memory: 13074  grad_norm: 5.6193  loss: 1.1787  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.1787
2024/12/29 13:16:42 - mmengine - INFO - Epoch(train) [10][500/567]  lr: 1.4908e-03  eta: 10:23:48  time: 1.6408  data_time: 0.0073  memory: 13074  grad_norm: 6.1540  loss: 1.2285  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.2285
2024/12/29 13:18:31 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:18:31 - mmengine - INFO - Epoch(train) [10][567/567]  lr: 1.4908e-03  eta: 10:21:56  time: 1.6395  data_time: 0.0070  memory: 13074  grad_norm: 5.5876  loss: 1.3260  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.3260
2024/12/29 13:19:28 - mmengine - INFO - Epoch(val) [10][95/95]    acc/top1: 0.6618  acc/top5: 1.0000  acc/mean1: 0.5285  confusion_matrix/result: 
tensor([[100,   4,   0,  14],
        [ 51,  42,   0,  25],
        [  0,   0,   3, 115],
        [ 34,   7,   5, 354]])
  data_time: 0.1052  time: 0.5875
2024/12/29 13:19:28 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_6.pth is removed
2024/12/29 13:19:28 - mmengine - INFO - The best checkpoint with 0.6618 acc/top1 at 10 epoch is saved to best_acc_top1_epoch_10.pth.
2024/12/29 13:22:17 - mmengine - INFO - Epoch(train) [11][100/567]  lr: 1.4836e-03  eta: 10:19:25  time: 1.6353  data_time: 0.0069  memory: 13074  grad_norm: 5.7716  loss: 1.1891  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1891
2024/12/29 13:25:01 - mmengine - INFO - Epoch(train) [11][200/567]  lr: 1.4836e-03  eta: 10:16:37  time: 1.6361  data_time: 0.0070  memory: 13074  grad_norm: 5.6143  loss: 1.1631  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1631
2024/12/29 13:27:45 - mmengine - INFO - Epoch(train) [11][300/567]  lr: 1.4836e-03  eta: 10:13:50  time: 1.6388  data_time: 0.0068  memory: 13074  grad_norm: 6.3536  loss: 1.2726  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.2726
2024/12/29 13:28:34 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:30:29 - mmengine - INFO - Epoch(train) [11][400/567]  lr: 1.4836e-03  eta: 10:11:03  time: 1.6394  data_time: 0.0071  memory: 13074  grad_norm: 5.2083  loss: 1.2417  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.2417
2024/12/29 13:33:13 - mmengine - INFO - Epoch(train) [11][500/567]  lr: 1.4836e-03  eta: 10:08:17  time: 1.6396  data_time: 0.0070  memory: 13074  grad_norm: 4.7353  loss: 1.1085  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1085
2024/12/29 13:35:03 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:35:03 - mmengine - INFO - Epoch(train) [11][567/567]  lr: 1.4836e-03  eta: 10:06:25  time: 1.6388  data_time: 0.0070  memory: 13074  grad_norm: 5.1388  loss: 1.1820  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 1.1820
2024/12/29 13:37:51 - mmengine - INFO - Epoch(train) [12][100/567]  lr: 1.4744e-03  eta: 10:03:55  time: 1.6386  data_time: 0.0071  memory: 13074  grad_norm: 5.3616  loss: 1.1279  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 1.1279
2024/12/29 13:40:35 - mmengine - INFO - Epoch(train) [12][200/567]  lr: 1.4744e-03  eta: 10:01:08  time: 1.6380  data_time: 0.0071  memory: 13074  grad_norm: 5.4433  loss: 1.2097  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.2097
2024/12/29 13:43:19 - mmengine - INFO - Epoch(train) [12][300/567]  lr: 1.4744e-03  eta: 9:58:21  time: 1.6423  data_time: 0.0072  memory: 13074  grad_norm: 7.4311  loss: 1.4627  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.4627
2024/12/29 13:46:03 - mmengine - INFO - Epoch(train) [12][400/567]  lr: 1.4744e-03  eta: 9:55:35  time: 1.6397  data_time: 0.0074  memory: 13074  grad_norm: 4.7173  loss: 1.1849  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.1849
2024/12/29 13:48:47 - mmengine - INFO - Epoch(train) [12][500/567]  lr: 1.4744e-03  eta: 9:52:48  time: 1.6381  data_time: 0.0074  memory: 13074  grad_norm: 5.0982  loss: 1.1314  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.1314
2024/12/29 13:50:37 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:50:37 - mmengine - INFO - Epoch(train) [12][567/567]  lr: 1.4744e-03  eta: 9:50:57  time: 1.6395  data_time: 0.0072  memory: 13074  grad_norm: 5.5633  loss: 1.2478  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.2478
2024/12/29 13:50:37 - mmengine - INFO - Saving checkpoint at 12 epochs
2024/12/29 13:51:34 - mmengine - INFO - Epoch(val) [12][95/95]    acc/top1: 0.4125  acc/top5: 1.0000  acc/mean1: 0.6171  confusion_matrix/result: 
tensor([[ 97,   7,   3,  11],
        [ 24,  73,  11,  10],
        [  1,   1, 113,   3],
        [ 20,  14, 338,  28]])
  data_time: 0.1030  time: 0.5871
2024/12/29 13:54:23 - mmengine - INFO - Epoch(train) [13][100/567]  lr: 1.4633e-03  eta: 9:48:24  time: 1.6390  data_time: 0.0069  memory: 13074  grad_norm: 5.6190  loss: 1.2384  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 1.2384
2024/12/29 13:57:00 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 13:57:07 - mmengine - INFO - Epoch(train) [13][200/567]  lr: 1.4633e-03  eta: 9:45:38  time: 1.6413  data_time: 0.0069  memory: 13074  grad_norm: 4.9704  loss: 1.1844  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1844
2024/12/29 13:59:51 - mmengine - INFO - Epoch(train) [13][300/567]  lr: 1.4633e-03  eta: 9:42:52  time: 1.6422  data_time: 0.0073  memory: 13074  grad_norm: 5.3563  loss: 1.1797  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1797
2024/12/29 14:02:35 - mmengine - INFO - Epoch(train) [13][400/567]  lr: 1.4633e-03  eta: 9:40:06  time: 1.6405  data_time: 0.0069  memory: 13074  grad_norm: 5.2438  loss: 1.2036  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.2036
2024/12/29 14:05:19 - mmengine - INFO - Epoch(train) [13][500/567]  lr: 1.4633e-03  eta: 9:37:20  time: 1.6407  data_time: 0.0070  memory: 13074  grad_norm: 5.5569  loss: 1.1356  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1356
2024/12/29 14:07:09 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 14:07:09 - mmengine - INFO - Epoch(train) [13][567/567]  lr: 1.4633e-03  eta: 9:35:29  time: 1.6425  data_time: 0.0070  memory: 13074  grad_norm: 5.3080  loss: 1.2304  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.2304
2024/12/29 14:09:58 - mmengine - INFO - Epoch(train) [14][100/567]  lr: 1.4502e-03  eta: 9:32:56  time: 1.6398  data_time: 0.0070  memory: 13074  grad_norm: 5.1943  loss: 1.1777  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.1777
2024/12/29 14:12:42 - mmengine - INFO - Epoch(train) [14][200/567]  lr: 1.4502e-03  eta: 9:30:10  time: 1.6395  data_time: 0.0069  memory: 13074  grad_norm: 4.8710  loss: 1.1079  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.1079
2024/12/29 14:15:26 - mmengine - INFO - Epoch(train) [14][300/567]  lr: 1.4502e-03  eta: 9:27:23  time: 1.6389  data_time: 0.0071  memory: 13074  grad_norm: 5.4375  loss: 1.0864  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0864
2024/12/29 14:18:10 - mmengine - INFO - Epoch(train) [14][400/567]  lr: 1.4502e-03  eta: 9:24:38  time: 1.6443  data_time: 0.0073  memory: 13074  grad_norm: 5.1723  loss: 1.1749  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.1749
2024/12/29 14:20:55 - mmengine - INFO - Epoch(train) [14][500/567]  lr: 1.4502e-03  eta: 9:21:52  time: 1.6426  data_time: 0.0073  memory: 13074  grad_norm: 5.4082  loss: 1.1250  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1250
2024/12/29 14:22:45 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 14:22:45 - mmengine - INFO - Epoch(train) [14][567/567]  lr: 1.4502e-03  eta: 9:20:01  time: 1.6412  data_time: 0.0071  memory: 13074  grad_norm: 5.7747  loss: 1.1741  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1741
2024/12/29 14:23:41 - mmengine - INFO - Epoch(val) [14][95/95]    acc/top1: 0.3621  acc/top5: 1.0000  acc/mean1: 0.5664  confusion_matrix/result: 
tensor([[ 53,  31,  28,   6],
        [  0,  94,  24,   0],
        [  0,   0, 118,   0],
        [  2,  18, 372,   8]])
  data_time: 0.1029  time: 0.5860
2024/12/29 14:25:27 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 14:26:29 - mmengine - INFO - Epoch(train) [15][100/567]  lr: 1.4352e-03  eta: 9:17:26  time: 1.6360  data_time: 0.0069  memory: 13074  grad_norm: 5.1630  loss: 1.1084  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1084
2024/12/29 14:29:13 - mmengine - INFO - Epoch(train) [15][200/567]  lr: 1.4352e-03  eta: 9:14:39  time: 1.6392  data_time: 0.0070  memory: 13074  grad_norm: 4.7119  loss: 1.0468  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.0468
2024/12/29 14:31:57 - mmengine - INFO - Epoch(train) [15][300/567]  lr: 1.4352e-03  eta: 9:11:54  time: 1.6430  data_time: 0.0070  memory: 13074  grad_norm: 4.5462  loss: 1.0424  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.0424
2024/12/29 14:34:41 - mmengine - INFO - Epoch(train) [15][400/567]  lr: 1.4352e-03  eta: 9:09:08  time: 1.6423  data_time: 0.0070  memory: 13074  grad_norm: 5.9008  loss: 1.1536  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 1.1536
2024/12/29 14:37:25 - mmengine - INFO - Epoch(train) [15][500/567]  lr: 1.4352e-03  eta: 9:06:22  time: 1.6426  data_time: 0.0072  memory: 13074  grad_norm: 5.3957  loss: 1.0845  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.0845
2024/12/29 14:39:16 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 14:39:16 - mmengine - INFO - Epoch(train) [15][567/567]  lr: 1.4352e-03  eta: 9:04:31  time: 1.6393  data_time: 0.0069  memory: 13074  grad_norm: 5.2149  loss: 1.1811  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.1811
2024/12/29 14:39:16 - mmengine - INFO - Saving checkpoint at 15 epochs
2024/12/29 14:42:05 - mmengine - INFO - Epoch(train) [16][100/567]  lr: 1.4183e-03  eta: 9:01:55  time: 1.6403  data_time: 0.0071  memory: 13074  grad_norm: 5.0561  loss: 1.2135  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.2135
2024/12/29 14:44:49 - mmengine - INFO - Epoch(train) [16][200/567]  lr: 1.4183e-03  eta: 8:59:09  time: 1.6389  data_time: 0.0070  memory: 13074  grad_norm: 5.5470  loss: 1.2151  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.2151
2024/12/29 14:47:33 - mmengine - INFO - Epoch(train) [16][300/567]  lr: 1.4183e-03  eta: 8:56:23  time: 1.6417  data_time: 0.0072  memory: 13074  grad_norm: 4.7480  loss: 1.2250  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.2250
2024/12/29 14:50:18 - mmengine - INFO - Epoch(train) [16][400/567]  lr: 1.4183e-03  eta: 8:53:38  time: 1.6425  data_time: 0.0071  memory: 13074  grad_norm: 4.1501  loss: 1.0327  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0327
2024/12/29 14:52:53 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 14:53:02 - mmengine - INFO - Epoch(train) [16][500/567]  lr: 1.4183e-03  eta: 8:50:52  time: 1.6411  data_time: 0.0071  memory: 13074  grad_norm: 4.7680  loss: 1.0348  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0348
2024/12/29 14:54:52 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 14:54:52 - mmengine - INFO - Epoch(train) [16][567/567]  lr: 1.4183e-03  eta: 8:49:01  time: 1.6406  data_time: 0.0071  memory: 13074  grad_norm: 4.2537  loss: 0.9853  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.9853
2024/12/29 14:55:48 - mmengine - INFO - Epoch(val) [16][95/95]    acc/top1: 0.7281  acc/top5: 1.0000  acc/mean1: 0.6194  confusion_matrix/result: 
tensor([[ 83,  18,   0,  17],
        [  4,  98,   0,  16],
        [  0,   1,   4, 113],
        [  8,  25,   3, 364]])
  data_time: 0.1019  time: 0.5856
2024/12/29 14:55:48 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_10.pth is removed
2024/12/29 14:55:48 - mmengine - INFO - The best checkpoint with 0.7281 acc/top1 at 16 epoch is saved to best_acc_top1_epoch_16.pth.
2024/12/29 14:58:38 - mmengine - INFO - Epoch(train) [17][100/567]  lr: 1.3995e-03  eta: 8:46:24  time: 1.6394  data_time: 0.0071  memory: 13074  grad_norm: 4.9192  loss: 1.0354  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.0354
2024/12/29 15:01:22 - mmengine - INFO - Epoch(train) [17][200/567]  lr: 1.3995e-03  eta: 8:43:38  time: 1.6401  data_time: 0.0071  memory: 13074  grad_norm: 4.6291  loss: 1.1175  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1175
2024/12/29 15:04:06 - mmengine - INFO - Epoch(train) [17][300/567]  lr: 1.3995e-03  eta: 8:40:52  time: 1.6445  data_time: 0.0070  memory: 13074  grad_norm: 6.1127  loss: 1.1176  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1176
2024/12/29 15:06:50 - mmengine - INFO - Epoch(train) [17][400/567]  lr: 1.3995e-03  eta: 8:38:07  time: 1.6443  data_time: 0.0073  memory: 13074  grad_norm: 4.0155  loss: 0.9406  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9406
2024/12/29 15:09:35 - mmengine - INFO - Epoch(train) [17][500/567]  lr: 1.3995e-03  eta: 8:35:22  time: 1.6439  data_time: 0.0072  memory: 13074  grad_norm: 4.4093  loss: 1.0385  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.0385
2024/12/29 15:11:25 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 15:11:25 - mmengine - INFO - Epoch(train) [17][567/567]  lr: 1.3995e-03  eta: 8:33:31  time: 1.6427  data_time: 0.0070  memory: 13074  grad_norm: 4.9186  loss: 1.0006  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0006
2024/12/29 15:14:14 - mmengine - INFO - Epoch(train) [18][100/567]  lr: 1.3790e-03  eta: 8:30:54  time: 1.6437  data_time: 0.0072  memory: 13074  grad_norm: 4.8427  loss: 1.2133  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.2133
2024/12/29 15:16:58 - mmengine - INFO - Epoch(train) [18][200/567]  lr: 1.3790e-03  eta: 8:28:09  time: 1.6431  data_time: 0.0071  memory: 13074  grad_norm: 4.0402  loss: 0.9905  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9905
2024/12/29 15:19:42 - mmengine - INFO - Epoch(train) [18][300/567]  lr: 1.3790e-03  eta: 8:25:23  time: 1.6436  data_time: 0.0070  memory: 13074  grad_norm: 3.8007  loss: 0.9432  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9432
2024/12/29 15:21:23 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 15:22:27 - mmengine - INFO - Epoch(train) [18][400/567]  lr: 1.3790e-03  eta: 8:22:38  time: 1.6486  data_time: 0.0071  memory: 13074  grad_norm: 4.5398  loss: 0.9851  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9851
2024/12/29 15:25:11 - mmengine - INFO - Epoch(train) [18][500/567]  lr: 1.3790e-03  eta: 8:19:53  time: 1.6464  data_time: 0.0074  memory: 13074  grad_norm: 5.3582  loss: 1.1505  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.1505
2024/12/29 15:27:01 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 15:27:01 - mmengine - INFO - Epoch(train) [18][567/567]  lr: 1.3790e-03  eta: 8:18:03  time: 1.6414  data_time: 0.0070  memory: 13074  grad_norm: 3.9993  loss: 0.9998  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9998
2024/12/29 15:27:01 - mmengine - INFO - Saving checkpoint at 18 epochs
2024/12/29 15:27:59 - mmengine - INFO - Epoch(val) [18][95/95]    acc/top1: 0.5557  acc/top5: 1.0000  acc/mean1: 0.6906  confusion_matrix/result: 
tensor([[ 97,   4,   4,  13],
        [  6,  90,   4,  18],
        [  0,   0, 100,  18],
        [  8,  12, 248, 132]])
  data_time: 0.1056  time: 0.5887
2024/12/29 15:30:47 - mmengine - INFO - Epoch(train) [19][100/567]  lr: 1.3568e-03  eta: 8:15:24  time: 1.6408  data_time: 0.0071  memory: 13074  grad_norm: 5.0010  loss: 1.1015  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.1015
2024/12/29 15:33:31 - mmengine - INFO - Epoch(train) [19][200/567]  lr: 1.3568e-03  eta: 8:12:39  time: 1.6436  data_time: 0.0070  memory: 13074  grad_norm: 4.4309  loss: 1.0263  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.0263
2024/12/29 15:36:16 - mmengine - INFO - Epoch(train) [19][300/567]  lr: 1.3568e-03  eta: 8:09:54  time: 1.6442  data_time: 0.0071  memory: 13074  grad_norm: 4.0955  loss: 0.9395  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.9395
2024/12/29 15:39:01 - mmengine - INFO - Epoch(train) [19][400/567]  lr: 1.3568e-03  eta: 8:07:09  time: 1.6444  data_time: 0.0070  memory: 13074  grad_norm: 5.6067  loss: 1.0512  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0512
2024/12/29 15:41:45 - mmengine - INFO - Epoch(train) [19][500/567]  lr: 1.3568e-03  eta: 8:04:24  time: 1.6453  data_time: 0.0070  memory: 13074  grad_norm: 5.0750  loss: 0.9894  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9894
2024/12/29 15:43:35 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 15:43:35 - mmengine - INFO - Epoch(train) [19][567/567]  lr: 1.3568e-03  eta: 8:02:33  time: 1.6437  data_time: 0.0070  memory: 13074  grad_norm: 4.3127  loss: 0.9582  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 0.9582
2024/12/29 15:46:24 - mmengine - INFO - Epoch(train) [20][100/567]  lr: 1.3329e-03  eta: 7:59:55  time: 1.6408  data_time: 0.0070  memory: 13074  grad_norm: 4.1814  loss: 0.9598  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9598
2024/12/29 15:49:09 - mmengine - INFO - Epoch(train) [20][200/567]  lr: 1.3329e-03  eta: 7:57:10  time: 1.6464  data_time: 0.0069  memory: 13074  grad_norm: 5.2282  loss: 1.0904  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 1.0904
2024/12/29 15:49:53 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 15:51:53 - mmengine - INFO - Epoch(train) [20][300/567]  lr: 1.3329e-03  eta: 7:54:24  time: 1.6434  data_time: 0.0071  memory: 13074  grad_norm: 5.2309  loss: 1.1757  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.1757
2024/12/29 15:54:37 - mmengine - INFO - Epoch(train) [20][400/567]  lr: 1.3329e-03  eta: 7:51:39  time: 1.6437  data_time: 0.0071  memory: 13074  grad_norm: 5.6917  loss: 1.0168  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 1.0168
2024/12/29 15:57:22 - mmengine - INFO - Epoch(train) [20][500/567]  lr: 1.3329e-03  eta: 7:48:54  time: 1.6466  data_time: 0.0072  memory: 13074  grad_norm: 4.1172  loss: 0.9401  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9401
2024/12/29 15:59:12 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 15:59:12 - mmengine - INFO - Epoch(train) [20][567/567]  lr: 1.3329e-03  eta: 7:47:03  time: 1.6435  data_time: 0.0070  memory: 13074  grad_norm: 4.1717  loss: 1.0264  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.0264
2024/12/29 16:00:08 - mmengine - INFO - Epoch(val) [20][95/95]    acc/top1: 0.7294  acc/top5: 1.0000  acc/mean1: 0.6933  confusion_matrix/result: 
tensor([[ 95,  16,   0,   7],
        [  0, 107,   1,  10],
        [  0,   1,  32,  85],
        [  6,  33,  45, 316]])
  data_time: 0.1028  time: 0.5860
2024/12/29 16:00:08 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_16.pth is removed
2024/12/29 16:00:09 - mmengine - INFO - The best checkpoint with 0.7294 acc/top1 at 20 epoch is saved to best_acc_top1_epoch_20.pth.
2024/12/29 16:02:58 - mmengine - INFO - Epoch(train) [21][100/567]  lr: 1.3074e-03  eta: 7:44:24  time: 1.6452  data_time: 0.0070  memory: 13074  grad_norm: 4.2006  loss: 0.9232  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9232
2024/12/29 16:05:43 - mmengine - INFO - Epoch(train) [21][200/567]  lr: 1.3074e-03  eta: 7:41:39  time: 1.6409  data_time: 0.0074  memory: 13074  grad_norm: 4.2589  loss: 0.9811  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9811
2024/12/29 16:08:27 - mmengine - INFO - Epoch(train) [21][300/567]  lr: 1.3074e-03  eta: 7:38:54  time: 1.6462  data_time: 0.0071  memory: 13074  grad_norm: 5.2786  loss: 1.0334  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0334
2024/12/29 16:11:12 - mmengine - INFO - Epoch(train) [21][400/567]  lr: 1.3074e-03  eta: 7:36:09  time: 1.6448  data_time: 0.0072  memory: 13074  grad_norm: 4.3598  loss: 1.0286  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.0286
2024/12/29 16:13:57 - mmengine - INFO - Epoch(train) [21][500/567]  lr: 1.3074e-03  eta: 7:33:24  time: 1.6443  data_time: 0.0073  memory: 13074  grad_norm: 3.9579  loss: 0.8796  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8796
2024/12/29 16:15:47 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 16:15:47 - mmengine - INFO - Epoch(train) [21][567/567]  lr: 1.3074e-03  eta: 7:31:33  time: 1.6433  data_time: 0.0072  memory: 13074  grad_norm: 4.8261  loss: 0.9943  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 0.9943
2024/12/29 16:15:47 - mmengine - INFO - Saving checkpoint at 21 epochs
2024/12/29 16:18:26 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 16:18:37 - mmengine - INFO - Epoch(train) [22][100/567]  lr: 1.2803e-03  eta: 7:28:55  time: 1.6430  data_time: 0.0073  memory: 13074  grad_norm: 4.5404  loss: 0.9323  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9323
2024/12/29 16:21:22 - mmengine - INFO - Epoch(train) [22][200/567]  lr: 1.2803e-03  eta: 7:26:09  time: 1.6470  data_time: 0.0071  memory: 13074  grad_norm: 4.8220  loss: 0.9739  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9739
2024/12/29 16:24:06 - mmengine - INFO - Epoch(train) [22][300/567]  lr: 1.2803e-03  eta: 7:23:24  time: 1.6452  data_time: 0.0071  memory: 13074  grad_norm: 4.3553  loss: 1.0283  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 1.0283
2024/12/29 16:26:51 - mmengine - INFO - Epoch(train) [22][400/567]  lr: 1.2803e-03  eta: 7:20:39  time: 1.6481  data_time: 0.0074  memory: 13074  grad_norm: 4.1112  loss: 0.9228  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9228
2024/12/29 16:29:36 - mmengine - INFO - Epoch(train) [22][500/567]  lr: 1.2803e-03  eta: 7:17:54  time: 1.6474  data_time: 0.0072  memory: 13074  grad_norm: 3.8905  loss: 0.9613  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.9613
2024/12/29 16:31:26 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 16:31:26 - mmengine - INFO - Epoch(train) [22][567/567]  lr: 1.2803e-03  eta: 7:16:04  time: 1.6479  data_time: 0.0072  memory: 13074  grad_norm: 5.3941  loss: 0.9092  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9092
2024/12/29 16:32:22 - mmengine - INFO - Epoch(val) [22][95/95]    acc/top1: 0.6936  acc/top5: 1.0000  acc/mean1: 0.7317  confusion_matrix/result: 
tensor([[107,   0,   0,  11],
        [  9,  89,   2,  18],
        [  1,   0,  75,  42],
        [ 12,   8, 128, 252]])
  data_time: 0.1010  time: 0.5854
2024/12/29 16:35:11 - mmengine - INFO - Epoch(train) [23][100/567]  lr: 1.2518e-03  eta: 7:13:24  time: 1.6451  data_time: 0.0071  memory: 13074  grad_norm: 4.1761  loss: 0.8711  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.8711
2024/12/29 16:37:55 - mmengine - INFO - Epoch(train) [23][200/567]  lr: 1.2518e-03  eta: 7:10:38  time: 1.6458  data_time: 0.0071  memory: 13074  grad_norm: 4.4358  loss: 0.9829  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.9829
2024/12/29 16:40:40 - mmengine - INFO - Epoch(train) [23][300/567]  lr: 1.2518e-03  eta: 7:07:53  time: 1.6449  data_time: 0.0072  memory: 13074  grad_norm: 5.0163  loss: 1.0003  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.0003
2024/12/29 16:43:24 - mmengine - INFO - Epoch(train) [23][400/567]  lr: 1.2518e-03  eta: 7:05:08  time: 1.6502  data_time: 0.0073  memory: 13074  grad_norm: 4.9044  loss: 1.0090  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0090
2024/12/29 16:46:09 - mmengine - INFO - Epoch(train) [23][500/567]  lr: 1.2518e-03  eta: 7:02:23  time: 1.6455  data_time: 0.0074  memory: 13074  grad_norm: 3.0478  loss: 0.7529  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7529
2024/12/29 16:46:52 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 16:47:59 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 16:47:59 - mmengine - INFO - Epoch(train) [23][567/567]  lr: 1.2518e-03  eta: 7:00:33  time: 1.6469  data_time: 0.0071  memory: 13074  grad_norm: 4.0727  loss: 0.9715  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9715
2024/12/29 16:50:48 - mmengine - INFO - Epoch(train) [24][100/567]  lr: 1.2220e-03  eta: 6:57:52  time: 1.6472  data_time: 0.0071  memory: 13074  grad_norm: 4.6471  loss: 1.0470  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 1.0470
2024/12/29 16:53:33 - mmengine - INFO - Epoch(train) [24][200/567]  lr: 1.2220e-03  eta: 6:55:07  time: 1.6448  data_time: 0.0071  memory: 13074  grad_norm: 4.4412  loss: 0.8702  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8702
2024/12/29 16:56:17 - mmengine - INFO - Epoch(train) [24][300/567]  lr: 1.2220e-03  eta: 6:52:22  time: 1.6444  data_time: 0.0072  memory: 13074  grad_norm: 3.8414  loss: 0.9175  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.9175
2024/12/29 16:59:02 - mmengine - INFO - Epoch(train) [24][400/567]  lr: 1.2220e-03  eta: 6:49:37  time: 1.6442  data_time: 0.0072  memory: 13074  grad_norm: 3.9415  loss: 0.8229  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8229
2024/12/29 17:01:47 - mmengine - INFO - Epoch(train) [24][500/567]  lr: 1.2220e-03  eta: 6:46:52  time: 1.6484  data_time: 0.0072  memory: 13074  grad_norm: 5.5146  loss: 1.0368  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0368
2024/12/29 17:03:37 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 17:03:37 - mmengine - INFO - Epoch(train) [24][567/567]  lr: 1.2220e-03  eta: 6:45:01  time: 1.6452  data_time: 0.0072  memory: 13074  grad_norm: 4.2562  loss: 0.8552  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8552
2024/12/29 17:03:37 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/12/29 17:04:34 - mmengine - INFO - Epoch(val) [24][95/95]    acc/top1: 0.5544  acc/top5: 1.0000  acc/mean1: 0.7273  confusion_matrix/result: 
tensor([[111,   0,   2,   5],
        [  8,  93,   5,  12],
        [  0,   0, 108,  10],
        [  9,  11, 274, 106]])
  data_time: 0.1039  time: 0.5867
2024/12/29 17:07:23 - mmengine - INFO - Epoch(train) [25][100/567]  lr: 1.1908e-03  eta: 6:42:21  time: 1.6450  data_time: 0.0072  memory: 13074  grad_norm: 4.7928  loss: 0.9084  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.9084
2024/12/29 17:10:08 - mmengine - INFO - Epoch(train) [25][200/567]  lr: 1.1908e-03  eta: 6:39:36  time: 1.6465  data_time: 0.0071  memory: 13074  grad_norm: 4.0158  loss: 0.8976  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8976
2024/12/29 17:12:52 - mmengine - INFO - Epoch(train) [25][300/567]  lr: 1.1908e-03  eta: 6:36:51  time: 1.6506  data_time: 0.0072  memory: 13074  grad_norm: 4.6661  loss: 0.9300  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9300
2024/12/29 17:15:24 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 17:15:37 - mmengine - INFO - Epoch(train) [25][400/567]  lr: 1.1908e-03  eta: 6:34:06  time: 1.6477  data_time: 0.0073  memory: 13074  grad_norm: 4.3052  loss: 0.8179  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8179
2024/12/29 17:18:22 - mmengine - INFO - Epoch(train) [25][500/567]  lr: 1.1908e-03  eta: 6:31:21  time: 1.6521  data_time: 0.0074  memory: 13074  grad_norm: 4.0233  loss: 0.9098  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9098
2024/12/29 17:20:12 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 17:20:12 - mmengine - INFO - Epoch(train) [25][567/567]  lr: 1.1908e-03  eta: 6:29:30  time: 1.6484  data_time: 0.0073  memory: 13074  grad_norm: 3.1163  loss: 0.6598  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.6598
2024/12/29 17:23:02 - mmengine - INFO - Epoch(train) [26][100/567]  lr: 1.1585e-03  eta: 6:26:50  time: 1.6463  data_time: 0.0071  memory: 13074  grad_norm: 4.7152  loss: 0.8481  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 0.8481
2024/12/29 17:25:47 - mmengine - INFO - Epoch(train) [26][200/567]  lr: 1.1585e-03  eta: 6:24:05  time: 1.6502  data_time: 0.0072  memory: 13074  grad_norm: 5.5229  loss: 0.9746  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9746
2024/12/29 17:28:31 - mmengine - INFO - Epoch(train) [26][300/567]  lr: 1.1585e-03  eta: 6:21:20  time: 1.6481  data_time: 0.0071  memory: 13074  grad_norm: 3.8589  loss: 0.9119  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9119
2024/12/29 17:31:16 - mmengine - INFO - Epoch(train) [26][400/567]  lr: 1.1585e-03  eta: 6:18:35  time: 1.6451  data_time: 0.0071  memory: 13074  grad_norm: 5.4097  loss: 1.0510  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 1.0510
2024/12/29 17:34:01 - mmengine - INFO - Epoch(train) [26][500/567]  lr: 1.1585e-03  eta: 6:15:50  time: 1.6478  data_time: 0.0071  memory: 13074  grad_norm: 5.1507  loss: 0.8676  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8676
2024/12/29 17:35:52 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 17:35:52 - mmengine - INFO - Epoch(train) [26][567/567]  lr: 1.1585e-03  eta: 6:14:00  time: 1.6498  data_time: 0.0070  memory: 13074  grad_norm: 3.8381  loss: 0.8403  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8403
2024/12/29 17:36:48 - mmengine - INFO - Epoch(val) [26][95/95]    acc/top1: 0.7785  acc/top5: 1.0000  acc/mean1: 0.7358  confusion_matrix/result: 
tensor([[110,   5,   0,   3],
        [  0, 111,   1,   6],
        [  0,   0,  26,  92],
        [ 13,  26,  21, 340]])
  data_time: 0.0996  time: 0.5859
2024/12/29 17:36:48 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_20.pth is removed
2024/12/29 17:36:49 - mmengine - INFO - The best checkpoint with 0.7785 acc/top1 at 26 epoch is saved to best_acc_top1_epoch_26.pth.
2024/12/29 17:39:38 - mmengine - INFO - Epoch(train) [27][100/567]  lr: 1.1250e-03  eta: 6:11:18  time: 1.6425  data_time: 0.0070  memory: 13074  grad_norm: 3.2450  loss: 0.8117  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8117
2024/12/29 17:42:23 - mmengine - INFO - Epoch(train) [27][200/567]  lr: 1.1250e-03  eta: 6:08:33  time: 1.6482  data_time: 0.0072  memory: 13074  grad_norm: 4.4749  loss: 0.9573  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.9573
2024/12/29 17:43:59 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 17:45:08 - mmengine - INFO - Epoch(train) [27][300/567]  lr: 1.1250e-03  eta: 6:05:48  time: 1.6502  data_time: 0.0071  memory: 13074  grad_norm: 4.8781  loss: 0.8795  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 0.8795
2024/12/29 17:47:53 - mmengine - INFO - Epoch(train) [27][400/567]  lr: 1.1250e-03  eta: 6:03:03  time: 1.6502  data_time: 0.0073  memory: 13074  grad_norm: 4.5138  loss: 0.8616  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.8616
2024/12/29 17:50:38 - mmengine - INFO - Epoch(train) [27][500/567]  lr: 1.1250e-03  eta: 6:00:19  time: 1.6506  data_time: 0.0072  memory: 13074  grad_norm: 5.8068  loss: 0.9513  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9513
2024/12/29 17:52:29 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 17:52:29 - mmengine - INFO - Epoch(train) [27][567/567]  lr: 1.1250e-03  eta: 5:58:28  time: 1.6482  data_time: 0.0071  memory: 13074  grad_norm: 4.6912  loss: 0.9821  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.9821
2024/12/29 17:52:29 - mmengine - INFO - Saving checkpoint at 27 epochs
2024/12/29 17:55:19 - mmengine - INFO - Epoch(train) [28][100/567]  lr: 1.0905e-03  eta: 5:55:47  time: 1.6475  data_time: 0.0071  memory: 13074  grad_norm: 4.3898  loss: 1.0125  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 1.0125
2024/12/29 17:58:03 - mmengine - INFO - Epoch(train) [28][200/567]  lr: 1.0905e-03  eta: 5:53:01  time: 1.6489  data_time: 0.0073  memory: 13074  grad_norm: 4.4111  loss: 0.7617  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7617
2024/12/29 18:00:48 - mmengine - INFO - Epoch(train) [28][300/567]  lr: 1.0905e-03  eta: 5:50:16  time: 1.6498  data_time: 0.0071  memory: 13074  grad_norm: 3.8166  loss: 0.7850  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7850
2024/12/29 18:03:33 - mmengine - INFO - Epoch(train) [28][400/567]  lr: 1.0905e-03  eta: 5:47:32  time: 1.6499  data_time: 0.0072  memory: 13074  grad_norm: 4.5055  loss: 0.9517  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.9517
2024/12/29 18:06:18 - mmengine - INFO - Epoch(train) [28][500/567]  lr: 1.0905e-03  eta: 5:44:47  time: 1.6479  data_time: 0.0073  memory: 13074  grad_norm: 4.2444  loss: 0.8357  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.8357
2024/12/29 18:08:09 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 18:08:09 - mmengine - INFO - Epoch(train) [28][567/567]  lr: 1.0905e-03  eta: 5:42:56  time: 1.6513  data_time: 0.0071  memory: 13074  grad_norm: 5.2035  loss: 0.9382  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.9382
2024/12/29 18:09:06 - mmengine - INFO - Epoch(val) [28][95/95]    acc/top1: 0.7944  acc/top5: 1.0000  acc/mean1: 0.7926  confusion_matrix/result: 
tensor([[117,   0,   0,   1],
        [  7, 103,   1,   7],
        [  1,   1,  60,  56],
        [ 12,  33,  36, 319]])
  data_time: 0.1118  time: 0.5951
2024/12/29 18:09:06 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_26.pth is removed
2024/12/29 18:09:06 - mmengine - INFO - The best checkpoint with 0.7944 acc/top1 at 28 epoch is saved to best_acc_top1_epoch_28.pth.
2024/12/29 18:11:56 - mmengine - INFO - Epoch(train) [29][100/567]  lr: 1.0551e-03  eta: 5:40:14  time: 1.6496  data_time: 0.0072  memory: 13074  grad_norm: 5.9311  loss: 0.9062  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9062
2024/12/29 18:12:36 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 18:14:41 - mmengine - INFO - Epoch(train) [29][200/567]  lr: 1.0551e-03  eta: 5:37:29  time: 1.6533  data_time: 0.0073  memory: 13074  grad_norm: 4.4323  loss: 0.9380  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.9380
2024/12/29 18:17:26 - mmengine - INFO - Epoch(train) [29][300/567]  lr: 1.0551e-03  eta: 5:34:44  time: 1.6534  data_time: 0.0076  memory: 13074  grad_norm: 4.2524  loss: 0.8181  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8181
2024/12/29 18:20:12 - mmengine - INFO - Epoch(train) [29][400/567]  lr: 1.0551e-03  eta: 5:32:00  time: 1.6502  data_time: 0.0073  memory: 13074  grad_norm: 5.2713  loss: 0.9671  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9671
2024/12/29 18:22:57 - mmengine - INFO - Epoch(train) [29][500/567]  lr: 1.0551e-03  eta: 5:29:15  time: 1.6502  data_time: 0.0075  memory: 13074  grad_norm: 3.5588  loss: 0.7555  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7555
2024/12/29 18:24:47 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 18:24:47 - mmengine - INFO - Epoch(train) [29][567/567]  lr: 1.0551e-03  eta: 5:27:24  time: 1.6527  data_time: 0.0071  memory: 13074  grad_norm: 4.1547  loss: 0.7995  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7995
2024/12/29 18:27:37 - mmengine - INFO - Epoch(train) [30][100/567]  lr: 1.0188e-03  eta: 5:24:42  time: 1.6477  data_time: 0.0074  memory: 13074  grad_norm: 4.6001  loss: 0.9380  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.9380
2024/12/29 18:30:22 - mmengine - INFO - Epoch(train) [30][200/567]  lr: 1.0188e-03  eta: 5:21:57  time: 1.6509  data_time: 0.0072  memory: 13074  grad_norm: 4.0844  loss: 0.8458  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8458
2024/12/29 18:33:07 - mmengine - INFO - Epoch(train) [30][300/567]  lr: 1.0188e-03  eta: 5:19:12  time: 1.6532  data_time: 0.0072  memory: 13074  grad_norm: 3.6463  loss: 0.7393  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7393
2024/12/29 18:35:52 - mmengine - INFO - Epoch(train) [30][400/567]  lr: 1.0188e-03  eta: 5:16:27  time: 1.6547  data_time: 0.0073  memory: 13074  grad_norm: 5.1454  loss: 0.8457  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8457
2024/12/29 18:38:37 - mmengine - INFO - Epoch(train) [30][500/567]  lr: 1.0188e-03  eta: 5:13:42  time: 1.6521  data_time: 0.0073  memory: 13074  grad_norm: 3.2594  loss: 0.7832  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7832
2024/12/29 18:40:11 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 18:40:27 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 18:40:27 - mmengine - INFO - Epoch(train) [30][567/567]  lr: 1.0188e-03  eta: 5:11:52  time: 1.6474  data_time: 0.0071  memory: 13074  grad_norm: 4.9618  loss: 0.9230  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.9230
2024/12/29 18:40:27 - mmengine - INFO - Saving checkpoint at 30 epochs
2024/12/29 18:41:25 - mmengine - INFO - Epoch(val) [30][95/95]    acc/top1: 0.7149  acc/top5: 1.0000  acc/mean1: 0.7715  confusion_matrix/result: 
tensor([[104,   4,   1,   9],
        [  0,  97,   1,  20],
        [  0,   0,  90,  28],
        [  2,  11, 139, 248]])
  data_time: 0.1027  time: 0.5865
2024/12/29 18:44:14 - mmengine - INFO - Epoch(train) [31][100/567]  lr: 9.8176e-04  eta: 5:09:09  time: 1.6472  data_time: 0.0070  memory: 13074  grad_norm: 4.9632  loss: 0.8563  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8563
2024/12/29 18:46:59 - mmengine - INFO - Epoch(train) [31][200/567]  lr: 9.8176e-04  eta: 5:06:24  time: 1.6498  data_time: 0.0072  memory: 13074  grad_norm: 4.0331  loss: 0.8188  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8188
2024/12/29 18:49:44 - mmengine - INFO - Epoch(train) [31][300/567]  lr: 9.8176e-04  eta: 5:03:39  time: 1.6519  data_time: 0.0071  memory: 13074  grad_norm: 4.1919  loss: 0.8508  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8508
2024/12/29 18:52:29 - mmengine - INFO - Epoch(train) [31][400/567]  lr: 9.8176e-04  eta: 5:00:54  time: 1.6485  data_time: 0.0073  memory: 13074  grad_norm: 4.6167  loss: 0.8443  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8443
2024/12/29 18:55:14 - mmengine - INFO - Epoch(train) [31][500/567]  lr: 9.8176e-04  eta: 4:58:09  time: 1.6491  data_time: 0.0074  memory: 13074  grad_norm: 3.7451  loss: 0.8299  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8299
2024/12/29 18:57:04 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 18:57:04 - mmengine - INFO - Epoch(train) [31][567/567]  lr: 9.8176e-04  eta: 4:56:19  time: 1.6488  data_time: 0.0071  memory: 13074  grad_norm: 3.9177  loss: 0.7680  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7680
2024/12/29 18:59:54 - mmengine - INFO - Epoch(train) [32][100/567]  lr: 9.4411e-04  eta: 4:53:36  time: 1.6463  data_time: 0.0071  memory: 13074  grad_norm: 3.7378  loss: 0.7196  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7196
2024/12/29 19:02:39 - mmengine - INFO - Epoch(train) [32][200/567]  lr: 9.4411e-04  eta: 4:50:51  time: 1.6483  data_time: 0.0072  memory: 13074  grad_norm: 4.3131  loss: 0.8073  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8073
2024/12/29 19:05:24 - mmengine - INFO - Epoch(train) [32][300/567]  lr: 9.4411e-04  eta: 4:48:06  time: 1.6506  data_time: 0.0073  memory: 13074  grad_norm: 4.3130  loss: 0.8255  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8255
2024/12/29 19:08:09 - mmengine - INFO - Epoch(train) [32][400/567]  lr: 9.4411e-04  eta: 4:45:21  time: 1.6507  data_time: 0.0072  memory: 13074  grad_norm: 5.0575  loss: 0.8891  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8891
2024/12/29 19:08:47 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 19:10:54 - mmengine - INFO - Epoch(train) [32][500/567]  lr: 9.4411e-04  eta: 4:42:36  time: 1.6506  data_time: 0.0073  memory: 13074  grad_norm: 3.9687  loss: 0.8001  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8001
2024/12/29 19:12:44 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 19:12:44 - mmengine - INFO - Epoch(train) [32][567/567]  lr: 9.4411e-04  eta: 4:40:45  time: 1.6470  data_time: 0.0072  memory: 13074  grad_norm: 4.6341  loss: 0.8689  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 0.8689
2024/12/29 19:13:40 - mmengine - INFO - Epoch(val) [32][95/95]    acc/top1: 0.6379  acc/top5: 1.0000  acc/mean1: 0.7890  confusion_matrix/result: 
tensor([[118,   0,   0,   0],
        [ 12,  96,   3,   7],
        [  0,   0, 113,   5],
        [ 14,  18, 214, 154]])
  data_time: 0.0957  time: 0.5823
2024/12/29 19:16:29 - mmengine - INFO - Epoch(train) [33][100/567]  lr: 9.0593e-04  eta: 4:38:02  time: 1.6438  data_time: 0.0070  memory: 13074  grad_norm: 4.4017  loss: 0.8275  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8275
2024/12/29 19:19:14 - mmengine - INFO - Epoch(train) [33][200/567]  lr: 9.0593e-04  eta: 4:35:17  time: 1.6502  data_time: 0.0073  memory: 13074  grad_norm: 4.5986  loss: 0.9126  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.9126
2024/12/29 19:21:59 - mmengine - INFO - Epoch(train) [33][300/567]  lr: 9.0593e-04  eta: 4:32:32  time: 1.6498  data_time: 0.0073  memory: 13074  grad_norm: 4.1122  loss: 0.8128  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.8128
2024/12/29 19:24:44 - mmengine - INFO - Epoch(train) [33][400/567]  lr: 9.0593e-04  eta: 4:29:47  time: 1.6528  data_time: 0.0073  memory: 13074  grad_norm: 5.9912  loss: 0.9067  top1_acc: 0.1250  top5_acc: 1.0000  loss_cls: 0.9067
2024/12/29 19:27:30 - mmengine - INFO - Epoch(train) [33][500/567]  lr: 9.0593e-04  eta: 4:27:02  time: 1.6547  data_time: 0.0073  memory: 13074  grad_norm: 4.8945  loss: 0.8543  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8543
2024/12/29 19:29:20 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 19:29:20 - mmengine - INFO - Epoch(train) [33][567/567]  lr: 9.0593e-04  eta: 4:25:11  time: 1.6486  data_time: 0.0073  memory: 13074  grad_norm: 4.8618  loss: 0.8257  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8257
2024/12/29 19:29:20 - mmengine - INFO - Saving checkpoint at 33 epochs
2024/12/29 19:32:11 - mmengine - INFO - Epoch(train) [34][100/567]  lr: 8.6733e-04  eta: 4:22:29  time: 1.6524  data_time: 0.0068  memory: 13074  grad_norm: 4.9449  loss: 0.8711  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8711
2024/12/29 19:34:56 - mmengine - INFO - Epoch(train) [34][200/567]  lr: 8.6733e-04  eta: 4:19:44  time: 1.6497  data_time: 0.0069  memory: 13074  grad_norm: 3.5126  loss: 0.6697  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6697
2024/12/29 19:37:23 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 19:37:41 - mmengine - INFO - Epoch(train) [34][300/567]  lr: 8.6733e-04  eta: 4:16:59  time: 1.6518  data_time: 0.0071  memory: 13074  grad_norm: 3.3021  loss: 0.6801  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.6801
2024/12/29 19:40:26 - mmengine - INFO - Epoch(train) [34][400/567]  lr: 8.6733e-04  eta: 4:14:13  time: 1.6502  data_time: 0.0072  memory: 13074  grad_norm: 4.9083  loss: 0.8288  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8288
2024/12/29 19:43:11 - mmengine - INFO - Epoch(train) [34][500/567]  lr: 8.6733e-04  eta: 4:11:28  time: 1.6515  data_time: 0.0070  memory: 13074  grad_norm: 4.1119  loss: 0.7963  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7963
2024/12/29 19:45:02 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 19:45:02 - mmengine - INFO - Epoch(train) [34][567/567]  lr: 8.6733e-04  eta: 4:09:38  time: 1.6493  data_time: 0.0069  memory: 13074  grad_norm: 5.3168  loss: 0.9179  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.9179
2024/12/29 19:45:58 - mmengine - INFO - Epoch(val) [34][95/95]    acc/top1: 0.7467  acc/top5: 1.0000  acc/mean1: 0.8059  confusion_matrix/result: 
tensor([[118,   0,   0,   0],
        [ 12, 104,   1,   1],
        [  4,   2,  82,  30],
        [ 46,  38,  57, 259]])
  data_time: 0.0984  time: 0.5830
2024/12/29 19:48:47 - mmengine - INFO - Epoch(train) [35][100/567]  lr: 8.2840e-04  eta: 4:06:54  time: 1.6486  data_time: 0.0067  memory: 13074  grad_norm: 5.7205  loss: 0.8880  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8880
2024/12/29 19:51:32 - mmengine - INFO - Epoch(train) [35][200/567]  lr: 8.2840e-04  eta: 4:04:09  time: 1.6492  data_time: 0.0070  memory: 13074  grad_norm: 3.3230  loss: 0.6959  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6959
2024/12/29 19:54:17 - mmengine - INFO - Epoch(train) [35][300/567]  lr: 8.2840e-04  eta: 4:01:24  time: 1.6528  data_time: 0.0070  memory: 13074  grad_norm: 4.8702  loss: 0.8483  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8483
2024/12/29 19:57:02 - mmengine - INFO - Epoch(train) [35][400/567]  lr: 8.2840e-04  eta: 3:58:39  time: 1.6492  data_time: 0.0071  memory: 13074  grad_norm: 4.2891  loss: 0.7173  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7173
2024/12/29 19:59:47 - mmengine - INFO - Epoch(train) [35][500/567]  lr: 8.2840e-04  eta: 3:55:54  time: 1.6513  data_time: 0.0069  memory: 13074  grad_norm: 6.1005  loss: 0.8625  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.8625
2024/12/29 20:01:38 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 20:01:38 - mmengine - INFO - Epoch(train) [35][567/567]  lr: 8.2840e-04  eta: 3:54:03  time: 1.6529  data_time: 0.0069  memory: 13074  grad_norm: 3.4748  loss: 0.7260  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7260
2024/12/29 20:04:27 - mmengine - INFO - Epoch(train) [36][100/567]  lr: 7.8925e-04  eta: 3:51:20  time: 1.6496  data_time: 0.0068  memory: 13074  grad_norm: 5.1906  loss: 0.7356  top1_acc: 0.2500  top5_acc: 1.0000  loss_cls: 0.7356
2024/12/29 20:05:58 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 20:07:12 - mmengine - INFO - Epoch(train) [36][200/567]  lr: 7.8925e-04  eta: 3:48:35  time: 1.6491  data_time: 0.0068  memory: 13074  grad_norm: 4.5193  loss: 0.7553  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7553
2024/12/29 20:09:57 - mmengine - INFO - Epoch(train) [36][300/567]  lr: 7.8925e-04  eta: 3:45:49  time: 1.6522  data_time: 0.0071  memory: 13074  grad_norm: 5.0055  loss: 0.7876  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7876
2024/12/29 20:12:42 - mmengine - INFO - Epoch(train) [36][400/567]  lr: 7.8925e-04  eta: 3:43:04  time: 1.6501  data_time: 0.0070  memory: 13074  grad_norm: 4.0004  loss: 0.7958  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.7958
2024/12/29 20:15:27 - mmengine - INFO - Epoch(train) [36][500/567]  lr: 7.8925e-04  eta: 3:40:19  time: 1.6485  data_time: 0.0075  memory: 13074  grad_norm: 4.1682  loss: 0.7554  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7554
2024/12/29 20:17:18 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 20:17:18 - mmengine - INFO - Epoch(train) [36][567/567]  lr: 7.8925e-04  eta: 3:38:29  time: 1.6516  data_time: 0.0071  memory: 13074  grad_norm: 4.5101  loss: 0.8220  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8220
2024/12/29 20:17:18 - mmengine - INFO - Saving checkpoint at 36 epochs
2024/12/29 20:18:15 - mmengine - INFO - Epoch(val) [36][95/95]    acc/top1: 0.8037  acc/top5: 1.0000  acc/mean1: 0.8582  confusion_matrix/result: 
tensor([[117,   0,   1,   0],
        [  1, 108,   1,   8],
        [  0,   0,  96,  22],
        [ 10,  20,  85, 285]])
  data_time: 0.1004  time: 0.5864
2024/12/29 20:18:15 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_28.pth is removed
2024/12/29 20:18:16 - mmengine - INFO - The best checkpoint with 0.8037 acc/top1 at 36 epoch is saved to best_acc_top1_epoch_36.pth.
2024/12/29 20:21:07 - mmengine - INFO - Epoch(train) [37][100/567]  lr: 7.5000e-04  eta: 3:35:45  time: 1.6477  data_time: 0.0069  memory: 13074  grad_norm: 5.9331  loss: 0.8662  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8662
2024/12/29 20:23:52 - mmengine - INFO - Epoch(train) [37][200/567]  lr: 7.5000e-04  eta: 3:33:00  time: 1.6503  data_time: 0.0069  memory: 13074  grad_norm: 4.2111  loss: 0.6938  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.6938
2024/12/29 20:26:37 - mmengine - INFO - Epoch(train) [37][300/567]  lr: 7.5000e-04  eta: 3:30:14  time: 1.6499  data_time: 0.0070  memory: 13074  grad_norm: 5.9309  loss: 0.8166  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8166
2024/12/29 20:29:22 - mmengine - INFO - Epoch(train) [37][400/567]  lr: 7.5000e-04  eta: 3:27:29  time: 1.6510  data_time: 0.0073  memory: 13074  grad_norm: 3.8552  loss: 0.7312  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7312
2024/12/29 20:32:07 - mmengine - INFO - Epoch(train) [37][500/567]  lr: 7.5000e-04  eta: 3:24:44  time: 1.6518  data_time: 0.0071  memory: 13074  grad_norm: 3.6892  loss: 0.6438  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6438
2024/12/29 20:33:58 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 20:33:58 - mmengine - INFO - Epoch(train) [37][567/567]  lr: 7.5000e-04  eta: 3:22:53  time: 1.6499  data_time: 0.0070  memory: 13074  grad_norm: 4.2231  loss: 0.7777  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7777
2024/12/29 20:34:37 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 20:36:47 - mmengine - INFO - Epoch(train) [38][100/567]  lr: 7.1075e-04  eta: 3:20:10  time: 1.6503  data_time: 0.0069  memory: 13074  grad_norm: 3.5870  loss: 0.7395  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7395
2024/12/29 20:39:33 - mmengine - INFO - Epoch(train) [38][200/567]  lr: 7.1075e-04  eta: 3:17:25  time: 1.6504  data_time: 0.0069  memory: 13074  grad_norm: 4.8020  loss: 0.8085  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8085
2024/12/29 20:42:18 - mmengine - INFO - Epoch(train) [38][300/567]  lr: 7.1075e-04  eta: 3:14:39  time: 1.6497  data_time: 0.0071  memory: 13074  grad_norm: 5.2045  loss: 0.8011  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.8011
2024/12/29 20:45:03 - mmengine - INFO - Epoch(train) [38][400/567]  lr: 7.1075e-04  eta: 3:11:54  time: 1.6511  data_time: 0.0071  memory: 13074  grad_norm: 5.1900  loss: 0.7956  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7956
2024/12/29 20:47:48 - mmengine - INFO - Epoch(train) [38][500/567]  lr: 7.1075e-04  eta: 3:09:09  time: 1.6517  data_time: 0.0072  memory: 13074  grad_norm: 4.9321  loss: 0.7511  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7511
2024/12/29 20:49:39 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 20:49:39 - mmengine - INFO - Epoch(train) [38][567/567]  lr: 7.1075e-04  eta: 3:07:18  time: 1.6527  data_time: 0.0070  memory: 13074  grad_norm: 3.8826  loss: 0.7296  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7296
2024/12/29 20:50:35 - mmengine - INFO - Epoch(val) [38][95/95]    acc/top1: 0.7891  acc/top5: 1.0000  acc/mean1: 0.8439  confusion_matrix/result: 
tensor([[118,   0,   0,   0],
        [  6, 100,   2,  10],
        [  0,   0,  98,  20],
        [ 10,  10, 101, 279]])
  data_time: 0.1032  time: 0.5879
2024/12/29 20:53:24 - mmengine - INFO - Epoch(train) [39][100/567]  lr: 6.7160e-04  eta: 3:04:34  time: 1.6484  data_time: 0.0071  memory: 13074  grad_norm: 4.7454  loss: 0.7855  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7855
2024/12/29 20:56:09 - mmengine - INFO - Epoch(train) [39][200/567]  lr: 6.7160e-04  eta: 3:01:49  time: 1.6501  data_time: 0.0072  memory: 13074  grad_norm: 4.1676  loss: 0.7585  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7585
2024/12/29 20:58:55 - mmengine - INFO - Epoch(train) [39][300/567]  lr: 6.7160e-04  eta: 2:59:04  time: 1.6536  data_time: 0.0070  memory: 13074  grad_norm: 5.9583  loss: 0.8129  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8129
2024/12/29 21:01:40 - mmengine - INFO - Epoch(train) [39][400/567]  lr: 6.7160e-04  eta: 2:56:19  time: 1.6556  data_time: 0.0072  memory: 13074  grad_norm: 4.3899  loss: 0.6625  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.6625
2024/12/29 21:03:09 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 21:04:25 - mmengine - INFO - Epoch(train) [39][500/567]  lr: 6.7160e-04  eta: 2:53:34  time: 1.6527  data_time: 0.0070  memory: 13074  grad_norm: 5.1982  loss: 0.8262  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8262
2024/12/29 21:06:16 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 21:06:16 - mmengine - INFO - Epoch(train) [39][567/567]  lr: 6.7160e-04  eta: 2:51:43  time: 1.6536  data_time: 0.0070  memory: 13074  grad_norm: 3.5489  loss: 0.6770  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.6770
2024/12/29 21:06:16 - mmengine - INFO - Saving checkpoint at 39 epochs
2024/12/29 21:09:06 - mmengine - INFO - Epoch(train) [40][100/567]  lr: 6.3267e-04  eta: 2:48:59  time: 1.6500  data_time: 0.0068  memory: 13074  grad_norm: 4.1862  loss: 0.7724  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7724
2024/12/29 21:11:51 - mmengine - INFO - Epoch(train) [40][200/567]  lr: 6.3267e-04  eta: 2:46:14  time: 1.6508  data_time: 0.0072  memory: 13074  grad_norm: 4.1014  loss: 0.7537  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7537
2024/12/29 21:14:36 - mmengine - INFO - Epoch(train) [40][300/567]  lr: 6.3267e-04  eta: 2:43:28  time: 1.6496  data_time: 0.0069  memory: 13074  grad_norm: 4.8931  loss: 0.6481  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6481
2024/12/29 21:17:22 - mmengine - INFO - Epoch(train) [40][400/567]  lr: 6.3267e-04  eta: 2:40:43  time: 1.6508  data_time: 0.0071  memory: 13074  grad_norm: 4.2921  loss: 0.7258  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7258
2024/12/29 21:20:07 - mmengine - INFO - Epoch(train) [40][500/567]  lr: 6.3267e-04  eta: 2:37:58  time: 1.6531  data_time: 0.0071  memory: 13074  grad_norm: 5.1462  loss: 0.7752  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7752
2024/12/29 21:21:57 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 21:21:57 - mmengine - INFO - Epoch(train) [40][567/567]  lr: 6.3267e-04  eta: 2:36:07  time: 1.6516  data_time: 0.0071  memory: 13074  grad_norm: 3.2568  loss: 0.5901  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.5901
2024/12/29 21:22:53 - mmengine - INFO - Epoch(val) [40][95/95]    acc/top1: 0.7798  acc/top5: 1.0000  acc/mean1: 0.8634  confusion_matrix/result: 
tensor([[117,   0,   1,   0],
        [  1, 106,   1,  10],
        [  0,   0, 109,   9],
        [  2,  16, 126, 256]])
  data_time: 0.0956  time: 0.5811
2024/12/29 21:25:42 - mmengine - INFO - Epoch(train) [41][100/567]  lr: 5.9407e-04  eta: 2:33:23  time: 1.6522  data_time: 0.0070  memory: 13074  grad_norm: 4.6216  loss: 0.7119  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7119
2024/12/29 21:28:27 - mmengine - INFO - Epoch(train) [41][200/567]  lr: 5.9407e-04  eta: 2:30:38  time: 1.6524  data_time: 0.0069  memory: 13074  grad_norm: 5.6584  loss: 0.7167  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7167
2024/12/29 21:31:13 - mmengine - INFO - Epoch(train) [41][300/567]  lr: 5.9407e-04  eta: 2:27:52  time: 1.6516  data_time: 0.0070  memory: 13074  grad_norm: 4.3561  loss: 0.6889  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6889
2024/12/29 21:31:46 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 21:33:58 - mmengine - INFO - Epoch(train) [41][400/567]  lr: 5.9407e-04  eta: 2:25:07  time: 1.6517  data_time: 0.0071  memory: 13074  grad_norm: 6.3766  loss: 0.7228  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7228
2024/12/29 21:36:43 - mmengine - INFO - Epoch(train) [41][500/567]  lr: 5.9407e-04  eta: 2:22:22  time: 1.6483  data_time: 0.0071  memory: 13074  grad_norm: 4.7148  loss: 0.7341  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7341
2024/12/29 21:38:34 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 21:38:34 - mmengine - INFO - Epoch(train) [41][567/567]  lr: 5.9407e-04  eta: 2:20:31  time: 1.6540  data_time: 0.0069  memory: 13074  grad_norm: 4.0560  loss: 0.6697  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.6697
2024/12/29 21:41:23 - mmengine - INFO - Epoch(train) [42][100/567]  lr: 5.5589e-04  eta: 2:17:47  time: 1.6486  data_time: 0.0069  memory: 13074  grad_norm: 4.3051  loss: 0.7690  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7690
2024/12/29 21:44:08 - mmengine - INFO - Epoch(train) [42][200/567]  lr: 5.5589e-04  eta: 2:15:02  time: 1.6523  data_time: 0.0070  memory: 13074  grad_norm: 4.1433  loss: 0.6197  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.6197
2024/12/29 21:46:53 - mmengine - INFO - Epoch(train) [42][300/567]  lr: 5.5589e-04  eta: 2:12:16  time: 1.6539  data_time: 0.0073  memory: 13074  grad_norm: 3.8808  loss: 0.6022  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.6022
2024/12/29 21:49:39 - mmengine - INFO - Epoch(train) [42][400/567]  lr: 5.5589e-04  eta: 2:09:31  time: 1.6523  data_time: 0.0073  memory: 13074  grad_norm: 4.7684  loss: 0.7742  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7742
2024/12/29 21:52:24 - mmengine - INFO - Epoch(train) [42][500/567]  lr: 5.5589e-04  eta: 2:06:46  time: 1.6541  data_time: 0.0070  memory: 13074  grad_norm: 6.2321  loss: 0.8833  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.8833
2024/12/29 21:54:15 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 21:54:15 - mmengine - INFO - Epoch(train) [42][567/567]  lr: 5.5589e-04  eta: 2:04:55  time: 1.6492  data_time: 0.0070  memory: 13074  grad_norm: 3.1641  loss: 0.6024  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.6024
2024/12/29 21:54:15 - mmengine - INFO - Saving checkpoint at 42 epochs
2024/12/29 21:55:11 - mmengine - INFO - Epoch(val) [42][95/95]    acc/top1: 0.8103  acc/top5: 1.0000  acc/mean1: 0.8583  confusion_matrix/result: 
tensor([[118,   0,   0,   0],
        [  9, 101,   2,   6],
        [  0,   0, 100,  18],
        [ 15,  13,  80, 292]])
  data_time: 0.0971  time: 0.5816
2024/12/29 21:55:11 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_36.pth is removed
2024/12/29 21:55:12 - mmengine - INFO - The best checkpoint with 0.8103 acc/top1 at 42 epoch is saved to best_acc_top1_epoch_42.pth.
2024/12/29 21:58:03 - mmengine - INFO - Epoch(train) [43][100/567]  lr: 5.1824e-04  eta: 2:02:11  time: 1.6444  data_time: 0.0070  memory: 13074  grad_norm: 6.1793  loss: 0.8851  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.8851
2024/12/29 22:00:25 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:00:48 - mmengine - INFO - Epoch(train) [43][200/567]  lr: 5.1824e-04  eta: 1:59:25  time: 1.6521  data_time: 0.0070  memory: 13074  grad_norm: 4.6310  loss: 0.7829  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7829
2024/12/29 22:03:33 - mmengine - INFO - Epoch(train) [43][300/567]  lr: 5.1824e-04  eta: 1:56:40  time: 1.6526  data_time: 0.0070  memory: 13074  grad_norm: 5.7627  loss: 0.8081  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.8081
2024/12/29 22:06:18 - mmengine - INFO - Epoch(train) [43][400/567]  lr: 5.1824e-04  eta: 1:53:55  time: 1.6597  data_time: 0.0085  memory: 13074  grad_norm: 5.4083  loss: 0.7504  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.7504
2024/12/29 22:09:03 - mmengine - INFO - Epoch(train) [43][500/567]  lr: 5.1824e-04  eta: 1:51:09  time: 1.6542  data_time: 0.0075  memory: 13074  grad_norm: 4.4913  loss: 0.7132  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7132
2024/12/29 22:10:54 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:10:54 - mmengine - INFO - Epoch(train) [43][567/567]  lr: 5.1824e-04  eta: 1:49:19  time: 1.6519  data_time: 0.0071  memory: 13074  grad_norm: 4.2896  loss: 0.6334  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6334
2024/12/29 22:13:44 - mmengine - INFO - Epoch(train) [44][100/567]  lr: 4.8122e-04  eta: 1:46:34  time: 1.6536  data_time: 0.0070  memory: 13074  grad_norm: 5.2681  loss: 0.7286  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7286
2024/12/29 22:16:28 - mmengine - INFO - Epoch(train) [44][200/567]  lr: 4.8122e-04  eta: 1:43:49  time: 1.6492  data_time: 0.0072  memory: 13074  grad_norm: 4.4150  loss: 0.6778  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6778
2024/12/29 22:19:14 - mmengine - INFO - Epoch(train) [44][300/567]  lr: 4.8122e-04  eta: 1:41:04  time: 1.6501  data_time: 0.0071  memory: 13074  grad_norm: 3.4889  loss: 0.5922  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.5922
2024/12/29 22:21:59 - mmengine - INFO - Epoch(train) [44][400/567]  lr: 4.8122e-04  eta: 1:38:18  time: 1.6506  data_time: 0.0071  memory: 13074  grad_norm: 5.7005  loss: 0.7938  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7938
2024/12/29 22:24:44 - mmengine - INFO - Epoch(train) [44][500/567]  lr: 4.8122e-04  eta: 1:35:33  time: 1.6517  data_time: 0.0075  memory: 13074  grad_norm: 4.8014  loss: 0.7388  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.7388
2024/12/29 22:26:35 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:26:35 - mmengine - INFO - Epoch(train) [44][567/567]  lr: 4.8122e-04  eta: 1:33:42  time: 1.6516  data_time: 0.0072  memory: 13074  grad_norm: 4.0220  loss: 0.6806  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.6806
2024/12/29 22:27:31 - mmengine - INFO - Epoch(val) [44][95/95]    acc/top1: 0.7294  acc/top5: 1.0000  acc/mean1: 0.8262  confusion_matrix/result: 
tensor([[105,   8,   0,   5],
        [  0, 109,   1,   8],
        [  0,   0, 109,   9],
        [  0,  19, 154, 227]])
  data_time: 0.0962  time: 0.5829
2024/12/29 22:29:01 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:30:20 - mmengine - INFO - Epoch(train) [45][100/567]  lr: 4.4495e-04  eta: 1:30:57  time: 1.6472  data_time: 0.0072  memory: 13074  grad_norm: 3.8182  loss: 0.6678  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.6678
2024/12/29 22:33:05 - mmengine - INFO - Epoch(train) [45][200/567]  lr: 4.4495e-04  eta: 1:28:12  time: 1.6492  data_time: 0.0071  memory: 13074  grad_norm: 4.8555  loss: 0.6367  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.6367
2024/12/29 22:35:50 - mmengine - INFO - Epoch(train) [45][300/567]  lr: 4.4495e-04  eta: 1:25:27  time: 1.6508  data_time: 0.0072  memory: 13074  grad_norm: 4.1966  loss: 0.5740  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.5740
2024/12/29 22:38:35 - mmengine - INFO - Epoch(train) [45][400/567]  lr: 4.4495e-04  eta: 1:22:42  time: 1.6517  data_time: 0.0070  memory: 13074  grad_norm: 5.1704  loss: 0.7039  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7039
2024/12/29 22:41:21 - mmengine - INFO - Epoch(train) [45][500/567]  lr: 4.4495e-04  eta: 1:19:56  time: 1.6515  data_time: 0.0072  memory: 13074  grad_norm: 4.2454  loss: 0.5842  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.5842
2024/12/29 22:43:11 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:43:11 - mmengine - INFO - Epoch(train) [45][567/567]  lr: 4.4495e-04  eta: 1:18:05  time: 1.6504  data_time: 0.0071  memory: 13074  grad_norm: 4.5517  loss: 0.6970  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6970
2024/12/29 22:43:11 - mmengine - INFO - Saving checkpoint at 45 epochs
2024/12/29 22:46:01 - mmengine - INFO - Epoch(train) [46][100/567]  lr: 4.0951e-04  eta: 1:15:21  time: 1.6506  data_time: 0.0071  memory: 13074  grad_norm: 4.6828  loss: 0.6484  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.6484
2024/12/29 22:48:46 - mmengine - INFO - Epoch(train) [46][200/567]  lr: 4.0951e-04  eta: 1:12:35  time: 1.6479  data_time: 0.0071  memory: 13074  grad_norm: 3.6311  loss: 0.5541  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.5541
2024/12/29 22:51:32 - mmengine - INFO - Epoch(train) [46][300/567]  lr: 4.0951e-04  eta: 1:09:50  time: 1.6499  data_time: 0.0075  memory: 13074  grad_norm: 5.7199  loss: 0.7591  top1_acc: 0.3750  top5_acc: 1.0000  loss_cls: 0.7591
2024/12/29 22:54:17 - mmengine - INFO - Epoch(train) [46][400/567]  lr: 4.0951e-04  eta: 1:07:05  time: 1.6512  data_time: 0.0071  memory: 13074  grad_norm: 4.3914  loss: 0.6937  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.6937
2024/12/29 22:56:37 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:57:02 - mmengine - INFO - Epoch(train) [46][500/567]  lr: 4.0951e-04  eta: 1:04:19  time: 1.6484  data_time: 0.0071  memory: 13074  grad_norm: 4.7827  loss: 0.7239  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7239
2024/12/29 22:58:53 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 22:58:53 - mmengine - INFO - Epoch(train) [46][567/567]  lr: 4.0951e-04  eta: 1:02:29  time: 1.6543  data_time: 0.0070  memory: 13074  grad_norm: 3.7747  loss: 0.6379  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6379
2024/12/29 22:59:49 - mmengine - INFO - Epoch(val) [46][95/95]    acc/top1: 0.8276  acc/top5: 1.0000  acc/mean1: 0.8784  confusion_matrix/result: 
tensor([[118,   0,   0,   0],
        [  0, 110,   2,   6],
        [  0,   0,  99,  19],
        [  6,  18,  79, 297]])
  data_time: 0.0956  time: 0.5844
2024/12/29 22:59:49 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_42.pth is removed
2024/12/29 22:59:49 - mmengine - INFO - The best checkpoint with 0.8276 acc/top1 at 46 epoch is saved to best_acc_top1_epoch_46.pth.
2024/12/29 23:02:39 - mmengine - INFO - Epoch(train) [47][100/567]  lr: 3.7500e-04  eta: 0:59:44  time: 1.6450  data_time: 0.0070  memory: 13074  grad_norm: 4.0550  loss: 0.6161  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6161
2024/12/29 23:05:24 - mmengine - INFO - Epoch(train) [47][200/567]  lr: 3.7500e-04  eta: 0:56:58  time: 1.6517  data_time: 0.0071  memory: 13074  grad_norm: 5.1220  loss: 0.7473  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7473
2024/12/29 23:08:09 - mmengine - INFO - Epoch(train) [47][300/567]  lr: 3.7500e-04  eta: 0:54:13  time: 1.6510  data_time: 0.0071  memory: 13074  grad_norm: 4.6968  loss: 0.7106  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.7106
2024/12/29 23:10:54 - mmengine - INFO - Epoch(train) [47][400/567]  lr: 3.7500e-04  eta: 0:51:28  time: 1.6507  data_time: 0.0073  memory: 13074  grad_norm: 5.7456  loss: 0.7371  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7371
2024/12/29 23:13:40 - mmengine - INFO - Epoch(train) [47][500/567]  lr: 3.7500e-04  eta: 0:48:42  time: 1.6542  data_time: 0.0073  memory: 13074  grad_norm: 5.1284  loss: 0.6288  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6288
2024/12/29 23:15:30 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 23:15:30 - mmengine - INFO - Epoch(train) [47][567/567]  lr: 3.7500e-04  eta: 0:46:51  time: 1.6518  data_time: 0.0071  memory: 13074  grad_norm: 5.1107  loss: 0.8224  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.8224
2024/12/29 23:18:20 - mmengine - INFO - Epoch(train) [48][100/567]  lr: 3.4152e-04  eta: 0:44:06  time: 1.6478  data_time: 0.0071  memory: 13074  grad_norm: 4.0931  loss: 0.7110  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.7110
2024/12/29 23:21:05 - mmengine - INFO - Epoch(train) [48][200/567]  lr: 3.4152e-04  eta: 0:41:21  time: 1.6550  data_time: 0.0072  memory: 13074  grad_norm: 4.5473  loss: 0.6117  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6117
2024/12/29 23:23:50 - mmengine - INFO - Epoch(train) [48][300/567]  lr: 3.4152e-04  eta: 0:38:36  time: 1.6529  data_time: 0.0072  memory: 13074  grad_norm: 4.9925  loss: 0.6968  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6968
2024/12/29 23:25:14 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 23:26:35 - mmengine - INFO - Epoch(train) [48][400/567]  lr: 3.4152e-04  eta: 0:35:50  time: 1.6501  data_time: 0.0071  memory: 13074  grad_norm: 4.6234  loss: 0.6805  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6805
2024/12/29 23:29:20 - mmengine - INFO - Epoch(train) [48][500/567]  lr: 3.4152e-04  eta: 0:33:05  time: 1.6516  data_time: 0.0072  memory: 13074  grad_norm: 5.5650  loss: 0.6521  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6521
2024/12/29 23:31:11 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 23:31:11 - mmengine - INFO - Epoch(train) [48][567/567]  lr: 3.4152e-04  eta: 0:31:14  time: 1.6499  data_time: 0.0074  memory: 13074  grad_norm: 5.1947  loss: 0.7011  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7011
2024/12/29 23:31:11 - mmengine - INFO - Saving checkpoint at 48 epochs
2024/12/29 23:32:08 - mmengine - INFO - Epoch(val) [48][95/95]    acc/top1: 0.8355  acc/top5: 1.0000  acc/mean1: 0.8598  confusion_matrix/result: 
tensor([[107,   8,   1,   2],
        [  0, 114,   1,   3],
        [  0,   0,  91,  27],
        [  2,  24,  56, 318]])
  data_time: 0.1019  time: 0.5865
2024/12/29 23:32:08 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_46.pth is removed
2024/12/29 23:32:09 - mmengine - INFO - The best checkpoint with 0.8355 acc/top1 at 48 epoch is saved to best_acc_top1_epoch_48.pth.
2024/12/29 23:35:00 - mmengine - INFO - Epoch(train) [49][100/567]  lr: 3.0916e-04  eta: 0:28:29  time: 1.6448  data_time: 0.0070  memory: 13074  grad_norm: 4.7121  loss: 0.6552  top1_acc: 0.5000  top5_acc: 1.0000  loss_cls: 0.6552
2024/12/29 23:37:45 - mmengine - INFO - Epoch(train) [49][200/567]  lr: 3.0916e-04  eta: 0:25:44  time: 1.6530  data_time: 0.0071  memory: 13074  grad_norm: 4.7946  loss: 0.6226  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6226
2024/12/29 23:40:30 - mmengine - INFO - Epoch(train) [49][300/567]  lr: 3.0916e-04  eta: 0:22:58  time: 1.6493  data_time: 0.0071  memory: 13074  grad_norm: 4.7595  loss: 0.6861  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6861
2024/12/29 23:43:15 - mmengine - INFO - Epoch(train) [49][400/567]  lr: 3.0916e-04  eta: 0:20:13  time: 1.6484  data_time: 0.0075  memory: 13074  grad_norm: 6.5089  loss: 0.6341  top1_acc: 0.7500  top5_acc: 1.0000  loss_cls: 0.6341
2024/12/29 23:46:00 - mmengine - INFO - Epoch(train) [49][500/567]  lr: 3.0916e-04  eta: 0:17:28  time: 1.6497  data_time: 0.0073  memory: 13074  grad_norm: 4.9194  loss: 0.6903  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6903
2024/12/29 23:47:51 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 23:47:51 - mmengine - INFO - Epoch(train) [49][567/567]  lr: 3.0916e-04  eta: 0:15:37  time: 1.6511  data_time: 0.0072  memory: 13074  grad_norm: 3.7116  loss: 0.6000  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6000
2024/12/29 23:50:40 - mmengine - INFO - Epoch(train) [50][100/567]  lr: 2.7801e-04  eta: 0:12:52  time: 1.6531  data_time: 0.0072  memory: 13074  grad_norm: 3.8721  loss: 0.7147  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7147
2024/12/29 23:53:25 - mmengine - INFO - Epoch(train) [50][200/567]  lr: 2.7801e-04  eta: 0:10:06  time: 1.6533  data_time: 0.0070  memory: 13074  grad_norm: 4.1870  loss: 0.7340  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.7340
2024/12/29 23:53:53 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/29 23:56:11 - mmengine - INFO - Epoch(train) [50][300/567]  lr: 2.7801e-04  eta: 0:07:21  time: 1.6533  data_time: 0.0073  memory: 13074  grad_norm: 4.8420  loss: 0.6862  top1_acc: 0.8750  top5_acc: 1.0000  loss_cls: 0.6862
2024/12/29 23:58:56 - mmengine - INFO - Epoch(train) [50][400/567]  lr: 2.7801e-04  eta: 0:04:36  time: 1.6518  data_time: 0.0074  memory: 13074  grad_norm: 4.2204  loss: 0.6866  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.6866
2024/12/30 00:01:41 - mmengine - INFO - Epoch(train) [50][500/567]  lr: 2.7801e-04  eta: 0:01:50  time: 1.6506  data_time: 0.0074  memory: 13074  grad_norm: 3.7393  loss: 0.5933  top1_acc: 0.6250  top5_acc: 1.0000  loss_cls: 0.5933
2024/12/30 00:03:32 - mmengine - INFO - Exp name: slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer_20241229_103901
2024/12/30 00:03:32 - mmengine - INFO - Epoch(train) [50][567/567]  lr: 2.7801e-04  eta: 0:00:00  time: 1.6510  data_time: 0.0072  memory: 13074  grad_norm: 3.9658  loss: 0.4680  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.4680
2024/12/30 00:03:32 - mmengine - INFO - Saving checkpoint at 50 epochs
2024/12/30 00:04:29 - mmengine - INFO - Epoch(val) [50][95/95]    acc/top1: 0.8528  acc/top5: 1.0000  acc/mean1: 0.8754  confusion_matrix/result: 
tensor([[118,   0,   0,   0],
        [  5, 100,   2,  11],
        [  0,   0,  99,  19],
        [  5,   9,  60, 326]])
  data_time: 0.0994  time: 0.5833
2024/12/30 00:04:29 - mmengine - INFO - The previous best checkpoint /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r101_8xb8-8x8x1-256e_kinetics400-rgb_transfer/best_acc_top1_epoch_48.pth is removed
2024/12/30 00:04:29 - mmengine - INFO - The best checkpoint with 0.8528 acc/top1 at 50 epoch is saved to best_acc_top1_epoch_50.pth.
