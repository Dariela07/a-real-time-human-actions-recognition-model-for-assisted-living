2024/11/27 11:14:03 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1597783192
    GPU 0: Tesla V100-PCIE-16GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.1, V11.1.74
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1597783192
    diff_rank_seed: False
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/11/27 11:14:03 - mmengine - INFO - Config:
ann_file_test = 'data/normal_vs_3critical/normal_vs_3critical_test.txt'
ann_file_train = 'data/normal_vs_3critical/normal_vs_3critical_train.txt'
ann_file_val = 'data/normal_vs_3critical/normal_vs_3critical_val.txt'
data_root = 'data/normal_vs_3critical/train'
data_root_test = 'data/normal_vs_3critical/test'
data_root_val = 'data/normal_vs_3critical/val'
dataset_type = 'VideoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=3, max_keep_ckpts=5, save_best='auto', type='CheckpointHook'),
    logger=dict(ignore_last=False, interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    runtime_info=dict(type='RuntimeInfoHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    sync_buffers=dict(type='SyncBuffersHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw_confusion_matrix=True, type='VisualizationHook'))
default_scope = 'mmaction'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
file_client_args = dict(io_backend='disk')
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=20)
model = dict(
    backbone=dict(
        channel_ratio=8,
        fast_pathway=dict(
            base_channels=8,
            conv1_kernel=(
                5,
                7,
                7,
            ),
            conv1_stride_t=1,
            depth=50,
            lateral=False,
            norm_eval=False,
            pool1_stride_t=1,
            pretrained=None,
            type='resnet3d'),
        pretrained=None,
        resample_rate=8,
        slow_pathway=dict(
            conv1_kernel=(
                1,
                7,
                7,
            ),
            conv1_stride_t=1,
            depth=50,
            dilations=(
                1,
                1,
                1,
                1,
            ),
            inflate=(
                0,
                0,
                1,
                1,
            ),
            lateral=True,
            norm_eval=False,
            pool1_stride_t=1,
            pretrained=None,
            type='resnet3d'),
        speed_ratio=8,
        type='ResNet3dSlowFast'),
    cls_head=dict(
        average_clips='prob',
        dropout_ratio=0.5,
        in_channels=2304,
        loss_cls=dict(
            class_weight=[
                1.0,
                1.0,
                1.0,
                0.3,
            ],
            loss_weight=1.0,
            type='CrossEntropyLoss'),
        num_classes=4,
        spatial_type='avg',
        type='SlowFastHead'),
    data_preprocessor=dict(
        format_shape='NCTHW',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='ActionDataPreprocessor'),
    type='Recognizer3D')
optim_wrapper = dict(
    clip_grad=dict(max_norm=40, norm_type=2),
    optimizer=dict(lr=0.0001, momentum=0.9, type='SGD', weight_decay=0.0001))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=True,
        end=70,
        gamma=0.1,
        milestones=[
            25,
            50,
        ],
        type='MultiStepLR'),
]
randomness = dict(deterministic=False, diff_rank_seed=False, seed=None)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='data/normal_vs_3critical/normal_vs_3critical_test.txt',
        data_prefix=dict(video='data/normal_vs_3critical/test'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=10,
                test_mode=True,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=224, type='ThreeCrop'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(metrics=[
    dict(type='AccMetric'),
    dict(num_classes=4, type='ConfusionMatrix'),
])
test_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(
        clip_len=32,
        frame_interval=2,
        num_clips=10,
        test_mode=True,
        type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=224, type='ThreeCrop'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
train_cfg = dict(
    max_epochs=70, type='EpochBasedTrainLoop', val_begin=1, val_interval=2)
train_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='data/normal_vs_3critical/normal_vs_3critical_train.txt',
        data_prefix=dict(video='data/normal_vs_3critical/train'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=1,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(type='RandomResizedCrop'),
            dict(keep_ratio=False, scale=(
                224,
                224,
            ), type='Resize'),
            dict(flip_ratio=0.5, type='Flip'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(clip_len=32, frame_interval=2, num_clips=1, type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(type='RandomResizedCrop'),
    dict(keep_ratio=False, scale=(
        224,
        224,
    ), type='Resize'),
    dict(flip_ratio=0.5, type='Flip'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='data/normal_vs_3critical/normal_vs_3critical_val.txt',
        data_prefix=dict(video='data/normal_vs_3critical/val'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=1,
                test_mode=True,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=224, type='CenterCrop'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(metrics=[
    dict(type='AccMetric'),
    dict(num_classes=4, type='ConfusionMatrix'),
])
val_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(
        clip_len=32,
        frame_interval=2,
        num_clips=1,
        test_mode=True,
        type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=224, type='CenterCrop'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='ActionVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/slowfast_r50_8xb8-4x16x1-256e_kinetics400-rgb_transfer_epoch70_lr1e-4'

2024/11/27 11:14:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/11/27 11:14:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
Name of parameter - Initialization information

backbone.slow_path.conv1.conv.weight - torch.Size([64, 3, 1, 7, 7]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv1.conv.weight - torch.Size([64, 80, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.downsample.conv.weight - torch.Size([256, 80, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.0.downsample.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.0.downsample.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv1.conv.weight - torch.Size([64, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.1.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.1.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv1.conv.weight - torch.Size([64, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer1.2.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1.2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv1.conv.weight - torch.Size([128, 320, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.downsample.conv.weight - torch.Size([512, 320, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.0.downsample.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.0.downsample.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv1.conv.weight - torch.Size([128, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.1.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv1.conv.weight - torch.Size([128, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.2.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.2.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv1.conv.weight - torch.Size([128, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv2.conv.weight - torch.Size([128, 128, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer2.3.conv3.conv.weight - torch.Size([512, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2.3.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv1.conv.weight - torch.Size([256, 640, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.downsample.conv.weight - torch.Size([1024, 640, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.0.downsample.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.0.downsample.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.1.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.1.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.2.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.2.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.3.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.3.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.4.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.4.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv1.conv.weight - torch.Size([256, 1024, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv2.conv.weight - torch.Size([256, 256, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer3.5.conv3.conv.weight - torch.Size([1024, 256, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3.5.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv1.conv.weight - torch.Size([512, 1280, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv2.conv.weight - torch.Size([512, 512, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.conv3.conv.weight - torch.Size([2048, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.conv3.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.downsample.conv.weight - torch.Size([2048, 1280, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.0.downsample.bn.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.0.downsample.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv1.conv.weight - torch.Size([512, 2048, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv2.conv.weight - torch.Size([512, 512, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.1.conv3.conv.weight - torch.Size([2048, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.1.conv3.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv1.conv.weight - torch.Size([512, 2048, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv2.conv.weight - torch.Size([512, 512, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.layer4.2.conv3.conv.weight - torch.Size([2048, 512, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer4.2.conv3.bn.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.slow_path.conv1_lateral.conv.weight - torch.Size([16, 8, 5, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer1_lateral.conv.weight - torch.Size([64, 32, 5, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer2_lateral.conv.weight - torch.Size([128, 64, 5, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.slow_path.layer3_lateral.conv.weight - torch.Size([256, 128, 5, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.conv1.conv.weight - torch.Size([8, 3, 5, 7, 7]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv1.conv.weight - torch.Size([8, 8, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv2.conv.weight - torch.Size([8, 8, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv2.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv2.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.conv3.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv3.bn.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.conv3.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.downsample.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.0.downsample.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.0.downsample.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv1.conv.weight - torch.Size([8, 32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv2.conv.weight - torch.Size([8, 8, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv2.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv2.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.1.conv3.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv3.bn.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.1.conv3.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv1.conv.weight - torch.Size([8, 32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv2.conv.weight - torch.Size([8, 8, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv2.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv2.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer1.2.conv3.conv.weight - torch.Size([32, 8, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv3.bn.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer1.2.conv3.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv1.conv.weight - torch.Size([16, 32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.downsample.conv.weight - torch.Size([64, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.0.downsample.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.0.downsample.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv1.conv.weight - torch.Size([16, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.1.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.1.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv1.conv.weight - torch.Size([16, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.2.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.2.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv1.conv.weight - torch.Size([16, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv1.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv1.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv2.conv.weight - torch.Size([16, 16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv2.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv2.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer2.3.conv3.conv.weight - torch.Size([64, 16, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv3.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer2.3.conv3.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv1.conv.weight - torch.Size([32, 64, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.downsample.conv.weight - torch.Size([128, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.0.downsample.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.0.downsample.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.1.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.1.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.2.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.2.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.3.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.3.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.4.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.4.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv1.conv.weight - torch.Size([32, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv2.conv.weight - torch.Size([32, 32, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv2.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv2.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer3.5.conv3.conv.weight - torch.Size([128, 32, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv3.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer3.5.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv1.conv.weight - torch.Size([64, 128, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.downsample.conv.weight - torch.Size([256, 128, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.0.downsample.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.0.downsample.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv1.conv.weight - torch.Size([64, 256, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.1.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.1.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv1.conv.weight - torch.Size([64, 256, 3, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv2.conv.weight - torch.Size([64, 64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

backbone.fast_path.layer4.2.conv3.conv.weight - torch.Size([256, 64, 1, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet3dSlowFast  

backbone.fast_path.layer4.2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of Recognizer3D  

cls_head.fc_cls.weight - torch.Size([4, 2304]): 
Initialized by user-defined `init_weights` in SlowFastHead  

cls_head.fc_cls.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in SlowFastHead  
2024/11/27 11:14:05 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/11/27 11:14:05 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/11/27 11:14:05 - mmengine - INFO - Checkpoints will be saved to /home/jupyter-yixuan/mmaction2/work_dirs/slowfast_r50_8xb8-4x16x1-256e_kinetics400-rgb_transfer_epoch70_lr1e-4.
